2020-10-11  Andras Varga

	sim: transmission updates API: origPacketId renamed to transmissionId

	related changes:
	- isUpdate() now uses separate flag
	- for the original packets, transmissionId is implicitly taken from the
	message ID

2020-09-24  Rudolf Hornig

	build: on Windows create .dll.a import libraries for shared libs.

	To work with LLD linker, proper import libs must exists as
	'autoimporting' is not supported with LLD for example. Also,
	autoimporting/exporting is probelematic because the number of exported
	symbols must not exceed 65536 in a single DLL and exporting all symbols
	can easily owervhelm the linker.

2020-06-23  Andras Varga

	sim: send()/sendDirect: introduced SendOptions and tx updates; cChannel
	API and cDatarateChannel changes

	Note: substantial changes in this patch are concentrated in cSimpleModule
	and cDatarateChannel, with necessary extra fields added to cPacket. The
	rest are to follow signature changes in cEnvir and cChannel API methods,
	and to record the extra fields in eventlog files.

	Updating a transmission (aka tx updates):

	Initial send() is interpreted as: "packet transmission begins now, packet
	content and duration are, as things are now, going to be this".

	Following that, an "update" (or any number of updates) can be sent. It is
	a packet with the updated ("actual") content, and with a
	"remaining transmission duration" attached. Updates may only be sent
	while transmission is still ongoing (t < txEndTime; note it is strictly
	less, not less-or-equal!)

	As an example, aborting a transmission is done by sending a packet with a
	truncated content and a remaining duration of zero.

	The transmission it modifies (in case there are parallel transmissions on
	the channel) is identified by the packet ID of the original transmission.
	Channels should understand updates and handle them accordingly. (Change
	to cDatarateChannel is part of this patch.)

	Receivers that receive the packet at the end of the reception (default)
	will only receive the final update, the original packet and intermediate
	updates are absorbed by the simulation kernel.

	Receivers that receive the packet at the start of the reception (see
	cGate::setDeliverImmediately(), ex setDeliverOnReceptionStart()) should
	be prepared to receive all of the original packet and the updates, and
	handle them appropriately. Tx updates can be recognized from
	cPacket::isUpdate() returning true. cPacket::getRemainingDuration()
	returns the remaining transmission duration, and cPacket::getDuration()
	the total transmission duration.

	As a safeguard against unprepared modules accidentally processing tx
	updates as normal full-blown packets, the module is only given tx updates
	if it explicitly declares that it is able to handle them properly. The
	latter is done by the module calling setTxUpdateSupport(true) e.g. in
	initialize().

	Non-transmission channels don't handle updates any different from other
	messages and packets.

	SendOptions was introduced as a means to handle combinatorial explosion
	of send() variants.

	More changes:
	- send() and sendDirect() now accept a SendOptions; sendDelayed() and
	 the sendDirect() variant with delay and duration now convert their
	 extra args to a SendOptions, and delegate to the "standard"
	 send()/sendDirect() versions.

	- cDatarateChannel: allow overriding the duration computed from the
	 channel datarate from the send() call.

	- cDatarateChannel: non-packet messages pass through without
	 interfering with packets.

	- cDatarateChannel: disabled channels to let transmission updates
	through,
	 so that it is possible for the transmitter module to abort the
	 ongoing packet transmission.

	- Note: tx updates (without duration/remainingDuration) are allowed
	 on paths without transmission channels.

	- signature change in methods that participate in the send()/sendDirect()
	 protocol: SendOptions was added to the arg list. This affects:
	 cGate::deliver(), cModule::arrived(), cChannel::processMessage()

	- in cChannel::processMessage(), result_t was renamed cChannel::Result,
	 and it is now a proper return value (not an output parameter);

	- remainingDuration was added to cChannel::Result.

	- cDatarateChannel's datarate is now optional: set it to 0 or nan
	 to leave it unspecified.  This change was necessary to support
	 transmitting frames with per-frame data rate selection.

	- Removed forceTransmissionFinishTime() from cChannel (and esp.
	cDatarateChannel)
	 It was a hack. Now you can use SendOptions::updateTx() instead.

	- Rename: setDeliverOnReceptionStart() -> setDeliverImmediately()

	- Added cSimpleModule::supportsTxUpdates() flag

	- cPacket now carries a remainingDuration field

	- cPacket: eliminated FL_ISRECEPTIONSTART; isReceptionStart() now uses
	 remainingDuration as input; added a similar isReceptionEnd() method.

	- cPacket::str() overhaul to reflect new fields and uses

	- in the APIs, sendDelay and propagationDelay (which were sort of
	 combined into a single value) are now distinct, and handled
	 separately.

	- eventlog format changes: BeginSendEntry: added sendDelay and
	 origPacketId; SendHopEntry, SendDirectEntry: added remainingDuration

	- cSimpleModule: factored out a throwNotOwnerOfMessage() method to
	 eliminate a large chunk of nearly identical code in send() and
	 sendDirect().

	- cEnvir callbacks also changed: beginSend() takes SendOptions;
	 messageSendHop() and messageSendDirect() take cChannel::Result
	 instead of separate args.

	Note: cChannel::Result became a toplevel class (ChannelResult) due to the
	need to break circular dependency: "cenvir.h" cannot include
	"cchannel.h" (circularity) and C++ does not allow inner classes to be
	forward-declared (why??).

2020-06-10  Andras Varga

	sim: simkerneldefs.h: remove obsolete PI define [reported by Christoph
	Sommer]

	Use M_PI instead.

2020-03-20  Levente Mészáros

	Eventlog: Fixed index cache lookup for entries before the start of the
	evenlog.

2020-03-20  Levente Mészáros

	Eventlog: Properly implemented timeline coordinate transformations for
	non-zero sized events.

2020-03-20  Levente Mészáros

	Eventlog: Added separateEventLogEntries flag to control whether events
	have zero or finite size.

2020-03-20  Levente Mészáros

	Eventlog: Implemented exact adjacency matrix for message dependencies on
	a range.

2020-03-20  Levente Mészáros

	Eventlog: Renamed timelineCoordinateOriginEventNumber and
	timelineCoordinateOriginSimulationTime to include System in their names.

2020-03-20  Levente Mészáros

	Eventlog: Followed change from ModuleMethod* to ComponentMethod*.

2020-03-20  Levente Mészáros

	Eventlog: Fixed documentation typo.

2020-03-20  Levente Mészáros

	Eventlog: Fixed efficiency when the eventlog file is incomplete.

2020-03-20  Levente Mészáros

	EventLog: Added set of excludedEventNumbers to support filtering out
	individual events.

2020-03-20  Levente Mészáros

	Eventlog: Changed EventLog constructor to read files smaller than 10MB
	into memory.

2020-01-07  Levente Mészáros

	eventlog: Added getFirst/LastEventNumber() and
	getFirst/LastSimulationTime() methods to IEventLog.

	Renamed first/lastEventNumber to first/lastConsideredEventNumber in
	FilteredEventLog. Added implementations to EventLog and FilteredEventLog.

2020-01-06  Levente Mészáros

	SequenceChart: added horizontally finite sized events.

	This allows separating message sends and method calls from each other
	horizontally.

	INCOMPLETE

2020-01-15  Andras Varga

	ChangeLogs: updated, by editing the raw versions. Guidelines:

	- removed duplications (changes released earlier as version 5.5 and 5.6)
	- removed uninteresting changes (e.g. "typo fixed"), and back-and-forth
	changes
	- describe impact of commit to that specific folder (e.g.
	include/omnetpp/ChangeLog
	 should describe the simkernel API changes, not the feature or bugfix
	which caused
	 the API change)
	- tried to make the descriptions more self-contained, i.e. understandable
	 without looking at the actual file changes

----------- lines above this marker have been added from git log -----------

2019-04-04  Rudolf Hornig

	* Makefile improvements.

2019-03-22  Andras Varga

	* eventlogtool renamed to opp_eventlogtool, for consistency.
	We'd like all our tools to begin with opp_.

2019-02-11  Andras Varga

	* Rename ModuleMethodBegin/End to ComponentMethodBegin/End, as
	the source/target may be channel object as well, not only a module.
	Fields also renamed: fromModuleId -> sourceComponentId, toModuleId ->
	targetComponentId.

2019-01-10  Rudolf Hornig

	* Makefile: Added support to build on Windows using MS ABI compatibility
	(i.e. Visual C++ libraries).

2020-01-06  ------ omnetpp-5.6 released ------

2019-05-15  ------ omnetpp-5.5 released ------

2018-11-05  Zoltan Bojthe

	* Fix: event number printf format: remove extra tail "d"

2018-06-25  ------ omnetpp-5.4.1 released ------

2018-06-20  Rudolf Hornig

	* Added opp_eventlogtool as an alias for eventlogtool

2018-06-11  ------ omnetpp-5.4 released ------

2018-04-11  ------ omnetpp-5.3 released ------

2017-12-08  ------ omnetpp-5.2.1 released ------

2017-09-18  ------ omnetpp-5.2 released ------

2017-04-06  Andras Varga

	* Modernizing: use C++11's range-based for loops where applicable, using
	clang-tidy's modernize-loop-convert.

	* Modernizing: replace INT64_PRINTF_FORMAT and LL with C++11's PRId64.
	Note: PRId64 includes the "d" that was not part of INT64_PRINTF_FORMAT
	alias LL.

2017-05-25  Rudolf Hornig

	* Updated makefiles for speeding up the build:
	- generated files are created only once, even when using parallel build
	- binaries are copied to their final destination using proper makefile
	  targets

2017-05-08  ------ omnetpp-5.1.1 released ------

2017-03-31  ------ omnetpp-5.1 released ------

2017-02-06  ------ omnetpp-5.1pre3 released ------

2016-12-23  ------ omnetpp-5.1pre2 released ------

2016-11-30  Rudolf Hornig

	* build: Makefile refactored. Added clang-c2 support and optimized
	the build process.

	* build: removed Makefile.vc, as Visual C++ builds are now handled
	by the standard Makefiles.

2016-07-25  Andras Varga

	* Added 'discard' field to SendHopEntry in eventlogentries.txt.
	See related cEnvir::messageSendHop() change in the simulation
	kernel.

2016-06-23  Rudolf Hornig

	* The makefile now uses compiler-generated dependency files.

2016-04-13  ------ omnetpp-5.0 released ------

2016-04-06  Levente Meszaros

	* Fixed a bug that broke transmission delay drawing in the sequence chart

2016-03-10  ------ omnetpp-5.0rc released ------

2015-12-07  ------ omnetpp-5.0b3 released ------

2015-11-23  Levente Meszaros

	* Support for fingerprint recording: added 'fingerprint' to EventEntry,
	see eventlogentries.txt.

2015-10-16  Andras Varga

	* omnetpp namespace made permanent (cannot be turned off):
	- removed configure option and preprocessor symbol USE_NAMESPACE
	- removed related macros: NAMESPACE_BEGIN, NAMESPACE_END,
	  USING_NAMESPACE, OPP, OPP_STR, OPP_PREFIX etc.

2015-07-20  ------ omnetpp-5.0b2 released ------

2015-06-16  Andras Varga

	* Cleanup: prefer ++it to it++ (less copying)

2015-06-08  Andras Varga

	* Cleanup: longer header guards

2015-06-11  Andras Varga

	* if(dynamic_cast) refactoring: change code like

	    if (dynamic_cast<cComponent *>(object) != nullptr) {
	        cComponent *component = (cComponent *)object;
	        ...
	    }

	To:

	    if (cComponent *component = dynamic_cast<cComponent *>(object)) {
	        ...
	    }

2015-06-08  Andras Varga

	* Cleanup: code formatting

2015-05-15  Andras Varga

	* Cleanup: use per-folder nested namespaces: omnetpp::envir, omnetpp::tkenv,
	omnetpp::layout, omnetpp::common, omnetpp::eventlog, etc.

2015-05-22  Andras Varga

	* Modernizing: added the 'override' keyword (C++11) to overridden methods;
	it becomes blank when using with an older compiler.

2015-05-21  Rudolf Hornig

	* Modernizing: replaced NULLs by 'nullptr' (C++11); it is defined as 0
	when using an older compiler.

2015-05-11  Andras Varga

	* Cleanup: data members renamed to camelCase

2015-04-20  Andras Varga

	* Cleanup: use C++ names of C headers (e.g. <cstdio> instead of <stdio.h>)

2015-04-12  Andras Varga

	* Cleanup: copyright years updated

2015-04-08  Andras Varga

	* Modernizing:

	- Use a fixed include path (-Iinclude -Isrc) for all source folders
	  under src/, and qualify cross-folder #includes with the folder
	  name (e.g. change #include "stringutil.h" to #include "common/stringutil.h").
	  This increases readbility and reduces the chance of including a wrong
	  header.

	- In source files, sort #include statements by folder.

2015-03-04  ------ omnetpp-5.0b1 released ------

2014-01-28  Andras Varga

	* Removed eventlog support for module reparenting (i.e. logging of
	cModule::changeParentTo()), because tools cannot easily support it

2014-11-27  ------ omnetpp-4.6 released ------

2014-06-30  ------ omnetpp-4.5 released ------

2014-02-13  ------ omnetpp-4.4.1 released ------

2013-12-20  ------ omnetpp-4.4 released ------

2013-11-14  Rudolf Hornig

	* Fixes for compiling with clang

2013-09-12  ------ omnetpp-4.3.1 released ------

2013-04-02  ------ omnetpp-4.3 released ------

2013-02-08  ------ omnetpp-4.3rc1 released ------

2012-03-13  ------ omnetpp-4.2.2 released ------

2012-01-17  ------ omnetpp-4.2.1 released ------

2011-10-28  ------ omnetpp-4.2 released ------

2011-09-11  ------ omnetpp-4.2rc1 released ------

2011-05-05  ------ omnetpp-4.2b2 released ------

2011-02-23  ------ omnetpp-4.2b1 released ------

2010-06-11  ------ omnetpp-4.1 released ------

2010-05-31  ------ omnetpp-4.1rc2 released ------

2010-04-20  ------ omnetpp-4.1b4 released ------

2010-03-14  ------ omnetpp-4.1b3 released ------

2009-11-09  Levente Meszaros

	* Fixed handling eventlog-recording-intervals, recording stopped at the first non recorded
	event and did not start afterwards.

2009-03-12  ------ omnetpp-4.0 released ------

2009-02-27  ------ omnetpp-4.0rc2 released ------

2008-12-12  ------ omnetpp-4.0rc1 released ------

2008-11-26  Andras Varga

	* library renamed to oppeventlog

2008-02-23  Andras Varga

	* Started the ChangeLog. The Eventlog library was added in omnetpp-4.0.
	It implements reading and traversing eventlog files recorded by
	simulations, and also provides a command-line tool (eventlogtool).
	Files >2GB are supported. The lib is used by Sequence Charts
	in the IDE. Author: Levente Meszaros.
