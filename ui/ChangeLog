2020-10-17  TÖRÖK Attila

	ide/scave: Forward mouse wheel scroll events (with modifiers) to
	Matplotlib

2020-10-16  TÖRÖK Attila

	ide/scave: charttemplates: Disable marker symbols by default

	Because they were very slow to draw with many data points.

2020-10-15  Rudolf Hornig

	ide: fixed library check because the build process now generates import
	libraries ending with '.dll.a'

2020-09-24  Rudolf Hornig

	ui: update eclipse to 4.17 and CDT to 10.0

2020-09-24  Rudolf Hornig

	build: do NOT use --rpath on Windows at all as it is meaningless and LLD
	does not support it at all.

	Note that --rpath is autodectected doring configuration, but the standard
	mingw windows linker accepts it however, it is a NoOp. We rather not use
	it at all on Windows because LLD on Windows explicitly errors on --rpath.

	Previously, rpath was disabled only for the MS-ABI compatible linker, but
	it's better not to use it at all.

2020-09-24  Rudolf Hornig

	build: on Windows create .dll.a import libraries for shared libs.

	To work with LLD linker, proper import libs must exists as
	'autoimporting' is not supported with LLD for example. Also,
	autoimporting/exporting is probelematic because the number of exported
	symbols must not exceed 65536 in a single DLL and exporting all symbols
	can easily owervhelm the linker.

2020-08-05  Rudolf Hornig

	ide: update to eclipse 4.16

2020-07-27  Andras Varga

	samples: added wiredphy

2020-07-03  TÖRÖK Attila

	ide/scave: Do not use String.stripLeading() yet

	Until build Docker images are updated to Java 11

2020-07-06  TÖRÖK Attila

	ide/scave: Enable vector data caching when pickling results.

2020-06-02  TÖRÖK Attila

	ide/scave: Add and use PlotBase.legendItemEnablementChanged()

2020-06-02  TÖRÖK Attila

	ide/scave: NativeChartViewer: use isZoomedOutX instead of
	getVerticalBar().isVisible()

2020-06-02  TÖRÖK Attila

	ide/scave: Add and use get[Min|Max][X|Y](int series) to [I]XYDataset

2020-06-22  TÖRÖK Attila

	ide/scave: Fix barchart and scatterchart pivoting with only a single
	value

	Confidence interval cannot be calculated in that case...

2020-06-30  TÖRÖK Attila

	ide/scave: Fix a race condition causing a Connection reset error

2020-06-18  TÖRÖK Attila

	ide/scave: Fix scatterchart errorbars, add errorbars to MPL barchart

	Add utils.confidence_interval helper Fix properties dialog label:
	"Confidence interval" -> "Confidence level"

2020-05-28  Andras Varga

	ide/scave: split FilterCache from MemoizationCache [Andras]; add result
	type(s) as filter cache key [Attila]

	Signed-off-by: Andras Varga <andras@omnetpp.org>

2020-06-17  Andras Varga

	ide/scave: ResultType repurposed as PanelType; some related cleanup in
	FilteredDataTabFolder

2020-05-28  TÖRÖK Attila

	ide/scave: use isfield when generating filter for scalars using the
	"excluder" mechanism...

2020-06-15  TÖRÖK Attila

	ide/scave: Add confidence interval drawing to scatterchart (MPL) template

2020-05-28  TÖRÖK Attila

	scave: Add "isfield" result filter attribute

2020-05-14  TÖRÖK Attila

	ide/scave: A couple more doc comments and a rename

2020-05-22  TÖRÖK Attila

	ide/scave: Remove an unused import

2020-06-11  TÖRÖK Attila

	ide/scave: LinePlot: Fix CrossHair drawing condition

2020-06-15  TÖRÖK Attila

	ide/scave: Factor out veil alpha magic number into a variable

2020-06-11  TÖRÖK Attila

	ide/scave: Don't forget to restore full opacity after drawing the veil

2020-06-11  TÖRÖK Attila

	ide/scave: Legend: Remove the "HIGHLIGHT_NONE" state, expand item bounds
	by half the spacing.

2020-05-29  TÖRÖK Attila

	ide/scave: Add and use Legend.getEnabledItemIndices()

2020-05-22  TÖRÖK Attila

	ide/scave: Plots: Do not take into account any disabled items anywhere

2020-06-10  TÖRÖK Attila

	HIGHLIGHT_OFF and HIGHLIGHT_NONE constants to Legend

2020-05-22  TÖRÖK Attila

	ide/scave: Draw the highlighted item (series) on top of a veil, on top of
	all other items.

2020-05-22  TÖRÖK Attila

	ide/scave: Add event handling, highlighted item, and item enablement to
	Legend

2020-05-29  TÖRÖK Attila

	ide/scave: Plots: Separate updateLegends and updateLegend, batch these
	too

2020-05-29  TÖRÖK Attila

	ide/scave: Bars,Histograms,Lines: Factor out drawSingle(int series) from
	draw()

2020-05-22  TÖRÖK Attila

	ide/scave: ZoomableCanvasMouseSupport: Respect Event.doit flag in
	listeners

	This will be needed so the soon-to-be interactive legend can really
	"cover" some part of the plot area. Only listen with untyped event
	listeners, because typed events don't provide access to the doit flag.

2020-05-22  TÖRÖK Attila

	ide/scave: Move DataPoint and dataPointsNear() from CrossHair to LinePlot

2020-05-25  TÖRÖK Attila

	ide/scave: Change and document when and how XYDataset is disposed

2020-05-22  TÖRÖK Attila

	ide/scave: Reduce flicker on native plot refresh

	Only clear the dataset and update the canvas when the script either is
	done or errored, not before starting to execute it.

2020-05-26  TÖRÖK Attila

	ide/scave: DataTable: Make the columnOrder always identity

	This might help reduce confusion in the future.

2020-05-26  TÖRÖK Attila

	ide/scave: LargeTable,DataTable: Use columnOrder when setting the
	selected column.

	Which is needed mostly for SetFilterBySelectedCellAction.

2020-05-21  TÖRÖK Attila

	ide/scave: Docs and a simplification for SymbolImageFactory.

2020-04-30  TÖRÖK Attila

	ide/scave: Store supported result types in Chart objects.

	So we can record them when exporting the chart as a custom chart
	template.

2020-05-27  Andras Varga

	ide/scave: Browse Data page: rearrange menu items

2020-05-27  Andras Varga

	ide/scave: SetFilterBySelectedCellAction: icon, rename

2020-05-27  Andras Varga

	ide/scave: added CopySelectedCellAction; added to Browse Data page
	context menu

2020-05-27  Andras Varga

	ide/scave: CopyChartFilterAction renamed to CopySelectionAsFilterAction

2020-05-27  Andras Varga

	ide/scave: ShowOutputVectorViewAction: added icon

2020-05-26  Andras Varga

	ide/scave: ChartScriptEditor: edit script icon moved

2020-05-26  Andras Varga

	ide/scave: a more modern trashcan icon

2020-05-27  Andras Varga

	ide/scave: remove unused icons

2020-05-26  Andras Varga

	ide/scave: icons: use standard Eclipse icons for refresh and copy

	refresh.png, refresh2.png are standard Eclipse icons; refreshmore.png is
	standard refresh.png with a "!" sign added

	RefreshChartAction originally had the wrong icon.

2020-05-26  Andras Varga

	ide/scave: Refresh/Reload action label changed, Refresh added to Browse
	Data page

	and Reload removed from Inputs page

2020-05-26  Andras Varga

	ide/scave: copyDataToClipboardAction renamed to copyRowsToClipboardAction
	(to agree with class name)

2020-05-26  Andras Varga

	ide/ned: fix swapped wizard descriptions

2020-05-18  Zoltan Bojthe

	ide: SimpleModule creation wizard: added "override" for functions

2020-05-26  Andras Varga

	ide/scave: ResultSelectionFilterGenerator: move public method to top,
	comment out unused code

2020-05-25  Andras Varga

	ide/scave: introduce and use makeFilterForIDListSelection()

	Added "source" field to IDListSelection to make it work.

	Note: it shouldn't need TimeTriggeredProgressMonitorDialog because it's
	fast.

	 Also fix: select all -> plot -> "Simplify" resulted in empty filter,
	changed to "*"

2020-05-23  Andras Varga

	ide/scave: IDListSelection: remove unused code

2020-05-25  Andras Varga

	ide/scave: FilterUtil renamed to AndFilter

2020-05-24  Andras Varga

	ide/scave: FilterUtil: speed up needsQuotes()

	Most of the time was spent compiling the regex.

2020-05-04  Andras Varga

	ide/scave: Filter classes mess reduced: more junk removed

	experiment/measurement/replication fields now ONLY recognized with the
	"runattr:" prefix: runattr:experiment, runattr:measurement, etc.

	Motivation: bugfix. On the Browse Data page, when switching to expression
	mode when the Experiment combo was filled in, the generated expressions
	contained "experiment =~ some value", ie. without the runattr prefix,
	which was not understood by filterIDList().

2020-05-24  Andras Varga

	ide/scave: DataTable fix: remove setItemCount() call from refresh()

	Reason: IDList is immutable, so the number of items may only change via
	setIDList().

	Since setItemCount() has the side effect of clearing the selection,
	calling refresh() caused the bug that pressing Ctrl+Space caused the
	selection to be lost.

2020-05-24  Andras Varga

	ide/scave: LargeTable: ctrl+Space should toggle selection state of the
	focused item

2020-05-22  Andras Varga

	ide/scave: LargeTable: right-click should also update the selection

	(Otherwise which row does the context menu refer to?)

	Rules: 1. right-clicking a selected item should leave the existing
	selection intact 2. right-clicking an unselected item should select that
	(and clear old selection)

	parameter change: boolean click -> int mouseButton

2020-05-22  Andras Varga

	ide/scave: DataTable/LargeTable: selection-related fixes

	DataTable.setIDList(): Clear selection. It is invalid with the new IDList
	so it cannot be left as is, and preserving it is too complicated because
	of change listener hell. Plus no user cares if selection is lost after
	changing the filters, really.

	setItemCount(): also clear the selection, for the same reason.

	Also: removed getSelectedItem() as it is broken concept, because there is
	multiple selection. Use focus item instead, at that 1 place where it is
	needed.

	SetFilterBySelectedCellAction: make it slightly less broken.

2020-05-22  Andras Varga

	ide/scave: FilterField, FilterHintsCache: added TYPE

2020-05-22  Andras Varga

	ide/scave: TimeTriggeredProgressMonitorDialog2: allow nested invocations
	after all

	It is difficult to guarantee they'll never happen.

2020-05-21  Andras Varga

	ide/scave: ResultSelectionFilterGenerator: add InterruptedFlag

2020-05-20  Andras Varga

	ide/scave: ResultSelectionFilterGenerator: use getProperty()

2020-05-19  TÖRÖK Attila

	ide/common: A small internal rename in HTMLUtils

2020-05-19  TÖRÖK Attila

	ide/common,scave: SymbolImageFactory and its uses in CrossHair and
	HtmlHoverInfo reworked

	- Don't save symbol images in /tmp as PNG files
	- Don't use <table> in tooltips
	   The HTMLUtils converter doesn't understand it anyways, it just added
	   a linebreak between the symbol image and the corresponding text
	- Use IImageProvider instead of Map<String, Image> in many places
	- Draw a 2-wide line on a symbol instead of 1

2020-05-19  TÖRÖK Attila

	ide/scave: Make ZoomableCachingCanvas.getOptimizedCoordinateMapper()
	public without kludge

2020-05-21  TÖRÖK Attila

	ide/scave: Do not add unnecessary trailing zeroes in
	XYDataset.get*AsString

2020-05-21  TÖRÖK Attila

	ide/scave: Delete the unused getPreciseX and getPreciseY methods from
	IXYDataset.

	It was used mostly in the tooltip, not for plotting, and only for the X
	axis. All data comes through a Python (NumPy) array, which is never more
	precise than an ordinary double.

2020-05-19  TÖRÖK Attila

	ide/scave: XYDataset: Don't make up fake precise (BigDecimal) values

	We never have them anyways, they all come from NumPy doubles. This leads
	to fewer unnecessary(?) digits in lineplot tooltips.

2020-05-19  TÖRÖK Attila

	ide/scave: XYTileCache: Don't stop caching new tiles at the memory limit,
	drop old ones instead

2020-05-19  TÖRÖK Attila

	ide/common: Add LargePoint.toString() for debugging purposes

2020-05-21  TÖRÖK Attila

	ide/scave: Fix plot axis layout (scientific notation tick size
	calculation).

2020-05-19  TÖRÖK Attila

	ide/scave: CrossHair: Use series title (not key) in tooltip

2020-05-19  TÖRÖK Attila

	ide/scave: Optimize CrossHair.dataPointsNear()

2020-05-16  TÖRÖK Attila

	ide/scave: FilterHintsCache: Return all proposals if the prefix is an
	exact match

	This makes the filter hint combo boxes more usable as regular combo
	boxes.

2020-05-14  TÖRÖK Attila

	ide/scave: Use the now separate pickle library, with Java source in the
	JAR.

	https://github.com/irmen/pickle

	We used the [un]pickling classes as part of the Pyrolite project until
	now. The pickling library was removed from Pyrolite when it was updated
	for Pyro5. See:
	https://github.com/irmen/Pyrolite/blob/pyrolite-5.0/README.md#where-is-pickle

2020-05-14  TÖRÖK Attila

	ide/scave: Upgrade Py4J to 0.10.9, include the Java source in the JAR.

	This version promises better Python 3.7 support. Also include the LICENSE
	file with the source.

2020-05-19  Andras Varga

	ide/common: MatchExpressionContentProposalProvider: don't scan the whole
	string for tokens

2020-05-20  Andras Varga

	ide/scave: FilterExpressionProposalProvider ported to the new
	MatchExpressionContentProposalProvider

2020-05-20  Andras Varga

	ide/eventlog: EventLogEntryProposalProvider ported to the new
	MatchExpressionContentProposalProvider

	The code also became A LOT more simple and readable.

2020-05-20  Andras Varga

	ide/common: MatchExpressionContentProposalProvider rewritten, for
	scalability, bugfixing and more practical API

	The old code failed with StackOverflowException on long inputs
	(10,000+ clauses) that we have in Scave, due to the use of recursive
	descent parsing.

	For content assist with a grammar as simple as as this one we don't need
	parsing, knowing the last few tokens in enough.

	This is exactly what this class does. We don't even tokenize the whole
	string because even that can be expensive (a few hundred millisecods and
	up), only the last few hundred chars. (We scan thr whole string to find a
	good starting point for the tokenizing though, like we can't start within
	a string constant because the whole result will be off.)

	The API is now getFieldNameProposals(), getDefaultFieldValueProposals()
	and getFieldValueProposals() (user needs to provide these methods), which
	is MILES better than original "here's the parse tree, do whatever you
	want with it".

2020-05-13  Andras Varga

	ide/common: MatchExpressionSyntax: added access modifiers

	I need Token etc to be public

2020-05-19  Andras Varga

	ide/common: ContentProposalEx: decorators are no longer in use, removed

2020-05-18  Andras Varga

	ide/common,scave: some of the proposal providers ported to the new
	ContentProposalProviderBase

2020-05-18  Andras Varga

	ide/common: ContentProposalProvider: factor out base class
	ContentProposalProviderBase

2020-05-18  Andras Varga

	ide/common: ContentProposalProvider: factor out filterAndWrapProposals()

2020-05-17  Andras Varga

	ide/common: StyledTextUndoRedoManager: added notes

2020-05-17  Andras Varga

	ide/common: ContentAssistUtil: fix StyledText issue of accepted proposal
	not always being inserted

2020-05-17  Andras Varga

	ide/common: ContentAssistUtil: docu, comment current issue with
	StyledText

2020-05-17  Andras Varga

	ide/common: ContentAssistUtil: factor out common part of configureText()
	and configureStyledText()

2020-05-17  Andras Varga

	ide/common: ContentAssistUtil: simplification

	1. ContentProposalAdapter can already install decoration, no need to do
	it ourselves 2. command ID doesn't need to be spelled out, null means
	"just use the standard one"

2020-05-17  Andras Varga

	ide/common: ContentAssistUtil: fix content assist popup position for
	multi-line Text widgets

	The proposal popup came up alongside the bottom edge of the text control,
	not below the edited line.

	The solution is to add code configureText() that adjusts the position
	from a listener. This is the copy of the same code in
	configureStyledText().

	It is possible that this code should really be part of
	ContentProposalAdapter in some form.

	THE ONLY PROBLEM with Text widgets is that we don't have Undo/Redo
	support for them. (For StyledText we do.)

2020-05-13  Andras Varga

	ide/scave: Content assist: more activation characters

2020-05-15  Andras Varga

	ide/scave: add "Simplify" button under filter field in the "Input" page
	of chart dialog

2020-05-14  Andras Varga

	ide/scave: CopyCopyDataToClipboardAction -> CopyRowsToClipboardAction.
	Same change in action text.

2020-05-14  Andras Varga

	ide/scave: SetFilterBySelectedCellAction fixed

	Multiple issues:

	1. Listener that was supposed to store which column the user clicked was
	never called, see DataTable fix.

	2. SetFilterBySelectedCellAction's update() method was directly called
	from BrowseDataPage, which was very ugly! Also, dinamic enablement from
	update() conflicted with use of isApplicable(). Eliminated the whole
	update() method.

	3. FilterBar always switched to "expression" mode even when filter was
	representable using the combos.

2020-05-14  Andras Varga

	ide/scave: ResultFilesTracker: show error dialog when some of the files
	could not be loaded

2020-05-12  Andras Varga

	common: ContentProposalProvider: fix needed for using with
	Text/StyledText widgets, e.g. in dialogs

	Without it, both startIndex and endIndex were 0, and proposal was
	inserted at the beginning of the content.

	This class is used at other places as well (NED, INI editors), there
	seems to be no regression.

2020-05-06  Andras Varga

	ide/scave: Content assist on the Advanced tabs of chart dialogs

	For rcParams, the input comes from Python. First time we execute a chart
	script, we do an extra call to return the result of a
	"mpl.rcParams()" call to the IDE. This is remembered, and used in content
	assist.

	NOTE: using the Enter key to accept proposals currently doesn't work,
	only the mouse. This is an error in the adapter.

2020-05-06  Andras Varga

	ide/scave: ChartEditForm: factor out makeProposalProvider

2020-05-12  Andras Varga

	ide/scave: use makeQuickFilter() throughout because it usually scales
	better (for reasonably-sized selections)

	TODO: We'll need to make a "Simplify" action into the chart dialog that
	fully utilizes ResultSelectionFilterGenerator.

2020-05-14  Andras Varga

	ide/scave: Speed up temp chart opening by bypassing pass filter
	evaluation

	Instead, we pass the selection IDList by means of a filterExpr->IDList
	cache.

	This provides tremendous performance improvement for temp charts, as the
	filter doesn't need to be run on the full set of loaded results.

	The IDList selected on "Browse Data" page is just "tunnelled through" to
	ResultProvider, via a secondary map in MemoizationCache.

	Also: ResultSelectionFilterGenerator: rename DumbFilter to QuickFilter,
	and make it less dumb (factor out those field that are the same among all
	results).

2020-05-09  Andras Varga

	ide/scave: ResultsProvider: memoize the results of query methods

2020-05-09  Andras Varga

	scave: ShmSendBufferManager: make it possible to save a copy of a
	ShmSendBuffer and later reuse it

2020-05-09  Andras Varga

	scave: ResultsPickler: make it possible to run the filter separately,
	before pickling

2020-05-11  Andras Varga

	ide/scave: chart templates: turn off word wrapping in the Filter
	expression fields

2020-05-05  Andras Varga

	ide/scave: added results.get_serial()

2020-05-12  Andras Varga

	ide/scave: remove redundant classes, #2

	GenericTreeNode and associated Payload classes are no longer used on the
	Inputs page

	SetFilterAction: currently unused; will need to implement something like
	that though

2020-05-12  Andras Varga

	ide/scave: remove redundant classes, #1

	Sorter: originally used (probably) for the Inputs page. Currently it was
	only used for sorting the list of runs within an result file (Inputs
	page). This use was removed, as runs in a result file are best shown in
	their natural order.

	ResultItemFormatter: this kind of stuff is nowadays done in Python.

	ScaveModelLabelDecorator: originally used for displaying error icons on
	bogus files in the Inputs view. The Inputs view no longer shows files we
	couldn't load, so this class has no use.

2020-05-08  Andras Varga

	ide/scave: some asyncExec() calls fixed (need to check that widget still
	exists)

2020-05-08  Andras Varga

	ide/scave: TimeTriggeredProgressMonitorDialog2: disable interactions
	(discard certain events) until dialog comes up

	because ModalContext.run() is NOT modal after all!

2020-05-12  TÖRÖK Attila

	ide/scave: ChartScriptEditor: Remove a stale TODO comment.

2020-05-12  TÖRÖK Attila

	ide/scave: PythonCallerThread: Make a debug print conditional.

2020-05-12  TÖRÖK Attila

	ide/scave: Rename CustomRunnable -> EventStreamRunnable in
	PythonCallerThread, make it private static, remove unused isDone flag.

2020-05-12  TÖRÖK Attila

	ide/scave: More descriptive thread names for PythonCallerThread and
	PythonOutputMonitoringThread.

2020-05-12  TÖRÖK Attila

	ide/scave: More doc comments.

2020-05-11  TÖRÖK Attila

	ide/scave: Make some ScaveEditor members private.

2020-05-11  TÖRÖK Attila

	ide/scave: Doc comments for analysis loaders and saver, Markers, and
	python modules.

2020-05-11  TÖRÖK Attila

	ide/scave: Some cleanup and docs for PythonEntryPoint.py

2020-05-11  TÖRÖK Attila

	ide/scave: Remove IDataset title, it was never set anyway.

2020-05-11  TÖRÖK Attila

	ide/scave: Minor cleanup in PythonCallerThread

2020-05-11  TÖRÖK Attila

	ide/scave: Organize scave actions into subpackages
	(matplotlib,nativeplots,ui,analysismodel).

2020-05-11  TÖRÖK Attila

	ide/scave: Extract NativeChartPlotter from NativeChartViewer

2020-05-11  TÖRÖK Attila

	ide/scave: Additional cleanup of PythonEntryPoint.py

2020-05-11  TÖRÖK Attila

	ide/scave: Move connect_to_IDE into PythonEntryPoint (maybe eliminate
	Gateway.py later?)

2020-05-08  TÖRÖK Attila

	ide/scave,nativelibs: Add/update a copyright header comments, some
	cleanup.

2020-05-08  TÖRÖK Attila

	ide/scave: Some cleanup, add more license headers and docstrings.

2020-05-07  TÖRÖK Attila

	ide/scave: Better error message in 3D and scatter chart templates.

2020-05-07  Andras Varga

	ide/scave: temporarily commented out Python warning dialog

	It could interfere with the "Loading files" progress dialog (also modal),
	and caused the UI to lock.

2020-05-07  Rudolf Hornig

	ide: updated copyright years in about dialog

2020-05-06  Andras Varga

	ide/scave: minor refactoring for readability (updatePages() ->
	modelChanged() rename)

2020-05-06  Andras Varga

	ide/scave: fix Charts page / Inputs page selection-related quirks

	After switching to the Inputs or Charts page from the Browse Data page,
	the actions related to selected item(s) were not available, because the
	editor selection still contained the Browse Data page's selection
	(of type IDListSelection).

2020-05-06  Andras Varga

	ide/scave: ChartsPage: code cosmetics

2020-05-06  Andras Varga

	ide/common: StringUtils.formatCounted() to use digit grouping

	Existing uses have been checked, digit grouping only improves them.
	Number of files being loaded, number of items selected, etc.

2020-05-05  Andras Varga

	ide/scave: IconGridViewer: fix: cancel pending rename on double-click

	Otherwise rename will *also* be activated after double-click, unless
	double-click action took away the focus from the widget.

2020-05-06  Andras Varga

	ide/scave: Inputs page: delay progress dialog for loading files

2020-05-06  TÖRÖK Attila

	ide/nativelibs: Remove more leftover debug prints.

2020-05-06  Rudolf Hornig

	ide: remove diagnostic output

2020-05-05  Rudolf Hornig

	qtenv/ide: updated copyright date in banners and about dialog

2020-05-04  TÖRÖK Attila

	ide/comon: Use proper modifier keys on Mac: SWT.CTRL -> SWT.MOD1,
	SWT.SHIFT -> SWT.MOD2

2020-05-04  TÖRÖK Attila

	ide/scave: Add PlotBase.runBatchedUpdates(), speeds up native charts a
	lot

2020-05-04  TÖRÖK Attila

	ide/scave: DataTable superscript two character turned into escaped
	unicode code point

	Because Eclipse on Windows does not read the source files as UTF-8 by
	default

2020-05-04  Andras Varga

	scave: compile fix and addendum to recent paramassignments-related commit

2020-05-02  Andras Varga

	ide/scave: Inputs page ui improvement

	- show a sample of contained results under each run
	- added toString() methods because that's what gets displayed on the
	status bar
	 if item is selected (see ScaveEditor.updateStatusLineManager())

2020-05-02  Andras Varga

	ide/scave: InputsPage: remove unused degree of freedom (groupRunFields)
	to simplify code

2020-05-02  Andras Varga

	scave: reduce paramvalues-paramassignments confusion; remove "param:"
	prefix (use "config:" instead)

	Reason: "param:" is easy for users to confuse with accessing the saved
	parameters (ParameterResult), and "config:" already lets you access those
	config lines

2020-05-01  Andras Varga

	scave: IDList sorting: update selection indices while sorting

	Important when IDList is used within a DataTable.

2020-04-30  Andras Varga

	scave: IDList sorting: new/renamed methods

2020-04-28  Andras Varga

	scave: IDList sorting refactored (~20x speedup for 1.5 million items,
	~30s->1.5s)

	Idea: since accessing result items (whose fields act as sort key) is
	relatively expensive, extract and store keys prior to sorting. This
	reduces the number of result item accesses from n*log(n) to just n. The
	log(n) gain matters a lot when n is a million or more.

	Using lambda+template, stable_sort, InterruptedFlag.

2020-04-28  Andras Varga

	scave: IDList sort methods: added interruptedflag; changed from const
	InterruptedFlag& to ptr everywhere

2020-04-28  Andras Varga

	ide/scave: TimeTriggeredProgressMonitorDialog2: added InterruptedFlag
	support

	At the cost of significant ugliness.

2020-04-30  Andras Varga

	ide/scave: fix recently introduced "Invalid thread access" exceptions.

	Code containing UI operations cannot be run in a background thread.

2020-05-04  TÖRÖK Attila

	ide/scave: NativeChartViewer Don't asyncExec in plotHistograms,
	indentation fix

2020-05-04  TÖRÖK Attila

	ide/sequencechart: compile fix: FontData.name -> FontData.getName()

2020-05-04  TÖRÖK Attila

	ide/nativelibs: ShmSendBuffer: remove stray print

2020-05-04  TÖRÖK Attila

	ide/scave: ChartScriptEditor: check for isDisposed in runChartScript

2020-04-29  TÖRÖK Attila

	ide/scave: Reduce the chance of PythonCallerThread leaking after
	PythonProcess dies

	Exit from PythonCallerThread loop when the Python process is no longer
	alive Interrupt PythonCallerThread on Python process exit

2020-04-30  TÖRÖK Attila

	ide/scave: Do not show the ConsoleView when we only want to switch to a
	given Console in it.

2020-04-30  TÖRÖK Attila

	ide/scave: Recognize the new Cursor.WAIT in MatplotlibWidget

2020-04-28  Andras Varga

	ide/scave: TimeTriggeredProgressMonitorDialog replaced with
	TimeTriggeredProgressMonitorDialog2, a better implementation

2020-04-28  Andras Varga

	ide/scave: TimeTriggeredProgressMonitorDialog is shitty. Added relevant
	comment.

2020-04-28  Andras Varga

	ide/scave: move callWithReadLock calls into the
	ResultSelectionFilterGenerator methods

	...that actually need them; more TimeTriggeredProgressMonitorDialog usage

2020-04-28  Andras Varga

	ide/scave: remove unused imports

2020-04-28  Andras Varga

	ide/scave: Chart.lookupProperty() renamed to getProperty(), added
	getPropertyValue() and setPropertyValue()

2020-04-28  Andras Varga

	ide/scave: ScaveModelUtil.getChartProperty() is not needed, it's the same
	as chart.lookupProperty()

2020-04-28  Andras Varga

	ide/scave: TimeTriggeredProgressMonitorDialog: added runWithDialog()
	overloads, use them

2020-04-28  Andras Varga

	ide/scave: MatplotlibWidget: fix "widget is disposed" exception

2020-04-27  Andras Varga

	ide/scave: remove unused IResultFileManagerDisposeListener support

2020-04-27  Andras Varga

	ide/scave: eliminate Java object leaks #1

2020-04-09  TÖRÖK Attila

	scave: shared memory based communication refactored

	Shmem allocations are done by an ShmSendBuffer class. ShmSendBuffer
	objects are created and kept track of by a ShmSendBufferManager instance.
	We keep one ShmSendBufferManager per Python process.

	Pickling is done into ShmSendBuffers. Buffer management in the Pickler
	class was simplified, and double-buffering eliminated.

	Shmems are disposed of in one of the following ways:
	- when the Python process has read one and no longer needs its contents,
	 it indicates this by writing a 1-byte at the start of the shmem.
	 ShmSendBuffer reserves an 8-byte header for this purpose.
	- ShmSendBufferManager::garbageCollect() needs to be called periodically;
	 it deallocates ShmSendBuffers that have been consumed by the Python
	 process.
	- When a new ShmSendBuffer is allocated, we also run garbageCollect()
	- When the receiver Python process dies, we clean up all ShmSendBuffers
	 by calling clean on ShmSendBufferManager.

	sharedmemory.h: added closeSharedMemory(); cosmetics

2020-04-27  TÖRÖK Attila

	ide/common: build fix: Restore mistakenly removed ImageUtils import.

	It was removed as a result of an incorrectly resolved merge conflict
	while reordering the warning-silencing commits in the topic branch.

2020-04-16  TÖRÖK Attila

	ide/all: Silence Java deprecation warnings - modernize

	rect.getCopy().expand(insets) => rect.getExpanded(insets)
	rect.getCopy().crop(insets) => rect.getShrinke(insets)

	p.preciseX = 0.5 => p.setPreciseX(0.5)

	Add type parameters to template types: List<?>, Class<?>,
	Collection<String>, Map<String,String>, ArrayList<Integer>,
	Iterator<String>

	StringUtils.chomp => StringUtils.removeEnd

	new Point(Math.round(oX), Math.round(oY)) => \ new
	Point((int)Math.round(oX), (int)Math.round(oY))

	lineWidth => getLineWidth()

2020-04-16  TÖRÖK Attila

	ide/all: Silence some Java deprecation warnings - modernize

	new T(x) => T.valueOf(x) where T is: Integer, Long, Float, Double,
	Boolean, Character

	new Boolean(true) => Boolean.TRUE new Boolean(false) => Boolean.FALSE

	Comparator => Comparator<String>

2020-04-24  Andras Varga

	ide/scave: somewhat improved property sheet for parameter results

2020-04-24  Andras Varga

	ide/scave: chart dialog: sort combo items (and refactor code for brevity
	& correctness)

2020-04-24  Andras Varga

	ide/scave: fix: eliminate occasional "Vectors (? / 0)" tab label

	data control's initial idlist must be consistent with containing
	filterpanel's idlist

2020-04-21  Andras Varga

	ide/scave: added ShowFieldsAsScalarAction, and changes to make it work

2020-04-20  Andras Varga

	scave: proper "field scalars"

	Before, we stored the fields of statistics/histograms/vector as proper
	scalars as well, with an "isField" bit set, in addition to inside
	StatisticsResult/VectorResult items.

	This patch removes this reduncancy of storage. Instead, we extend IDs so
	that they represent a scalar as "field x or statistics or vector y". In
	getItem() and getScalar() of such an ID, we fabricate a temporary
	ScalarResult object, and return that by value.

	One trick to simplify usage is to pass a "buffer" ScalarResult into
	getItem()/getScalar(), so it can return a simple pointer no matter
	whether the ID identifies a field scalar or a normal result item.

2020-04-18  Andras Varga

	scave: return result items as pointers (to reduce confusion w/ coming
	field scalars)

2020-04-14  Andras Varga

	scave: more unused stuff deleted from fields.cc/h, reduce number of
	classes

2020-04-14  Andras Varga

	scave: added Scave class with name constants; use everywhere

2020-04-21  Andras Varga

	ide/scave: measure time spent in ResultsProvider methods

2020-04-23  TÖRÖK Attila

	ide/scave: Kill the python process on unhandled exception, update actions
	more

2020-04-23  TÖRÖK Attila

	ide/scave: Print the exit code when a python process dies unexpectedly

2020-04-23  TÖRÖK Attila

	ide/scave: pychart: Use Process.onExit instead of handmade deathListeners

	This is only available starting with Java 9.

2020-04-23  TÖRÖK Attila

	ide/scave: Limit the size of the outputSoFar buffer in
	PythonOutputMonitoringThread

2020-04-23  TÖRÖK Attila

	ide/scave: PythonOutputMonitoringThread: Make sure the InputStream is
	closed.

2020-04-23  TÖRÖK Attila

	ide/scave: charttemplates: Fix 3dchart_itervars template (import Axes3D)

2020-04-23  TÖRÖK Attila

	ide/scave: charttemplates: Add and use utils.assert_columns_exist

2020-04-23  TÖRÖK Attila

	ide/scave: charttemplates: Allow plotting a barchart from a single scalar

2020-04-23  TÖRÖK Attila

	ide/scave: charttemplates: Remove print(df) calls

2020-04-23  TÖRÖK Attila

	ide/scave: charttemplates: Add check and warning when DF is empty

2020-04-23  TÖRÖK Attila

	ide/common: Allow excluding debug channels by prepending - to them in
	OMNETPP_DEBUG

2020-04-20  Andras Varga

	scave: remove "Ptr" suffix from method names; introduce RunAndValueList
	typedef for readability

2020-04-20  Andras Varga

	scave: fix: opp_scavetool: when listing run attrs, runs were not sorted

2020-04-03  TÖRÖK Attila

	ide/nativelibs: Fix ShmPickler::unmap, add PID to the SHM names, reduce
	leaks.

2020-04-20  TÖRÖK Attila

	ide/scave: Add null check to monitor in
	ResultSelectionFilterGenerator::getFilter()

2020-04-16  Andras Varga

	ide: all projects: remove unnecessary natures

2020-04-15  Andras Varga

	ide: all projects: apply Quick Fix to "'Automatic-Module-Name' header is
	required" warnings

	"'Automatic-Module-Name' header is required to be discoverable as a Java
	module in a Java modular setup (Java 9 and later)	MANIFEST.MF"

2020-04-10  Rudolf Hornig

	neddoc: use project relative path so specify doc-fragment file.

	- if the filename is relative, it is considered relative to the given
	project
	- if the filename is absolute, it is considered as a workspace absolute
	path

2020-04-08  Andras Varga

	ide/neddoc: UI refinements; excludedDirs semantic change

	- excludedDirs: now accepts both space and comma as separator; full
	workspace
	 paths are expected (if you want to exclude a "foo" dir in all projects,
	 now you need to write "/*/foo")

	- Layout: move excluded dirs and extension fragment file to the top,
	 under project list

	- Mnemonic for menu item

	- Labels shortened

	- Use SWTFactory

2020-04-07  Rudolf Hornig

	ide: neddoc generator dialog two column layout to reduce height.

2020-03-31  Rudolf Hornig

	ide: add possibility to insert documentation fragments into the generated
	ned documentation

2020-04-15  Andras Varga

	ide: eliminate tons of warnings

2020-04-15  Andras Varga

	ide: tab-to-space in all projects

2020-04-15  Andras Varga

	ide: "organize imports" on all projects

2020-04-14  Andras Varga

	ide/scave: rename: SetFilterAction2 -> SetFilterBySelectedCellAction

2020-04-14  Andras Varga

	ide/scave: remove unused classes

2020-04-13  Andras Varga

	scave: scave.i: cleanup (remove unused rules)

2020-04-13  Andras Varga

	scave: split resultitems.cc/h from resultfilemanager.cc/h

2020-04-11  Andras Varga

	scave: IDList: remove some stuff we no longer need

2020-04-10  Andras Varga

	scave: IDList: make IDList immutable (remove mutator member functions)

	Motivation: it makes it easier to write correct code in Java.

	IDLists are often cached at various places in Java, in the assumption
	that its contents never changes. Now it is guaranteed.

	An op=() still exists in C++ for technical reasons, but it's not
	accessible from Java.

	For building IDLists one should use std::vector<ID>, which goes by the
	name IDListBuffer in Java.

2020-01-03  TÖRÖK Attila

	ide/scave: enable debug prints based on debug channel activation in
	MatchExpressionContentProposalProvider

2020-04-08  TÖRÖK Attila

	ide/scave: Remove stale TODO comment in NativeChartViewer.

2020-04-15  TÖRÖK Attila

	ide/scave: Add IProgressMonitor parameter to
	ResultSelectionFilterGenerator; some commenting.

2020-04-15  TÖRÖK Attila

	ide/common: Add TimeTriggeredProgressMonitorDialog.runWithDialog static
	utility method.

2020-04-09  TÖRÖK Attila

	ide/scave: LargeTable: Simplify vertical scrolling to make it less
	glitchy.

	No need for complicated percentage calculations, just use the item
	indices directly on the ScrollBar; this works fine even with 2e9 rows.

2020-04-07  TÖRÖK Attila

	ide/scave: PythonProcessPool: Fix setting up the PYTHONPATH for python3
	processes - again. Commenting.

	Make sure it does not depend on the user-configurable "OMNeT++ install
	location" option, and that it works both during development, and in a
	deployed state.

2020-04-15  TÖRÖK Attila

	ide/common: Add Debug.inDevelopment()

2020-04-15  Rudolf Hornig

	ide: removed unused nativelibs.linux.x86 32-bit fragment project.

2020-04-15  Rudolf Hornig

	prod: fix a few issues in IDE build (appearing after updating to Tycho
	1.6)

2020-04-15  Rudolf Hornig

	prod: set min java version to 11 on all plugins

2020-04-15  Rudolf Hornig

	prod: tycho updated to latest version (1.6)

2020-04-06  Rudolf Hornig

	ide: use Java 11 as source and target version

2020-04-14  Rudolf Hornig

	prod: updated to Eclipse 4.15 and CDT 9.11

2020-04-09  Andras Varga

	ide/scave: Content assist for the Inputs field of chart dialogs

2020-04-09  Andras Varga

	ide/scave: compile fix

2020-04-09  Andras Varga

	ide/scave: more content assist fixes

2020-04-09  Andras Varga

	ide/common: MatchExpressionSyntax: lexer fix

2020-04-08  Andras Varga

	ide/scave: Filter expression content assist works better than before

	FilterExpressionProposalProvider revised, mostly works now

	MatchExpressionSyntax: correctly parse '=~' token

	FilterField:
	- added missing Kind values (Config, ResultAttribute)
	- prefix <-> Kind conversion
	- convenience ctor

	FilterHintsCache: provide name hints as well (e.g. list of itervars,
	config keys)

	getUniqueAttributeNames() -> getUniqueResultAttributeNames()
	getUniqueAttributeValues() -> getUniqueResultAttributeValues()

2020-04-07  Andras Varga

	ide/common: LargeTable: colors

2020-04-07  Andras Varga

	ide/common: LargeTable: cell icon and column alignment

2020-04-07  Andras Varga

	ide/common: LargeTable: table class and its row renderer refactored

	- Simplify ILargeTableRowRenderer interface: Only leave methods
	*actually*
	 used by LargeTable in the interface, move the rest (getImage,
	getIndentation etc)
	 to AbstractLargeTableRowRenderer.
	- ILargeTableRowRenderer only needs a getText(), getStyledText moved to
	 AbstractLargeTableRowRenderer.
	- Leave color and font selection totally to LargeTable. drawCell() will
	 receive them in the GC.

2020-04-07  Andras Varga

	ide/common: LargeTable: defaultSelection did not work

2020-04-03  Andras Varga

	ide/scave: Cache filter hints; refactoring

	Motivation: FilterHints is relatively slow esp for the Name field and it
	was executed on every keystroke in the filter combo. Solution: we should
	cache the (unfiltered) proposals.

	Rename: FilterContentProposalProvider -> FilterExpressionProposalProvider
	Also: in FilterBar: "Advanced Filter" -> "Filter Expression"

	Rename: FilterHints -> FilterHintsCache, and make it actually cache the
	hints

2020-04-05  Andras Varga

	ide/scave: Filter-related fixes

	FilteredDataPanel: filtering by expression did not work, due to missing
	selection listener. FilterUtil: value containing '=' was not quoted
	FilterCombo: fix NPE when trying to open popup w/ no available proposals

2020-04-03  Andras Varga

	ide/scave: FilterBar: fix layout

2020-04-02  Andras Varga

	ide/scave: remove unused class FilenameGenerator

2020-04-04  Andras Varga

	ide/common: MatchExpressionSyntax: updated to parse according to the new
	syntax (=~ operator)

	field(pattern) ==> field =~ pattern

2020-04-04  Andras Varga

	scave: IDList: hashCode64() added, dup() removed

2020-04-04  Andras Varga

	ide/scave: Filter combos: usability: add current text field content as
	first (default) proposal

	Otherwise, when user types a filter that's not among the hints and
	presses Enter to let it take effect, it will be overwritten by the first
	hint that matches it.

2020-04-03  Andras Varga

	ide/scave: FilterCombo: when the Erase icon is clicked, close the
	proposal popup

	if it was open, otherwise it'll continue to show outdated proposals

2020-04-03  Andras Varga

	ide/scave: FilterCombo: Set up for a single mouse click to accept a
	proposal

2020-04-03  Andras Varga

	ide/scave: FilterCombo: added keyboard shortcut for opening the proposal
	popup

	Down arrow key and Ctrl+Space

2020-04-03  TÖRÖK Attila

	ide/scave: Build fix: add missing #include in nativelibs.

2020-02-12  TÖRÖK Attila

	ide/scave: Deferred setProperty impl. on native plots to improve
	performance.

	also: add messy and long-winded exception handling to
	plot.set_propert[y|ies], resulting in prettier problem messages

2020-03-31  TÖRÖK Attila

	ide/scave: Fix matplotlib navigation (zoom/pan) restoration across
	executions with non-bar/line plots (so, histograms).

2020-04-02  TÖRÖK Attila

	ide/scave: Move unused icon file out of the way that caused a conflict on
	case-insensitive filesystems.

	The repo could not be cloned on macOS Catalina.

2020-03-10  TÖRÖK Attila

	ide/scave: Move all result pickling into C++, directly into shared
	memory.

	By reserving a 2 GiB SHM at once, then committing only the parts we write
	to - on Windows... on macOS and Linux we just overcommit all of it.

2020-03-27  TÖRÖK Attila

	ide/scave: Revert to the original way of discovering the absolute path of
	the pychart plugin sources.

	This is needed so we can properly set up PYTHONPATH for the spawned chart
	script executor python3 processes. And it needs to work correctly on all
	3 platforms, in both debug mode (during development), and in a deployed
	state (extracted from a release tarbal).

2020-04-02  Andras Varga

	ide/scave: FilteredDataPanel: speeding up proposal provider by caching
	result of IDList filtering

	Also: Limit handling simplified (100 million items is unlikely to be
	reached)

2020-04-02  Andras Varga

	ide/scave: FilterCombo reimplemented as a content-assisted Text widget

	Old FilterCombo renamed to AlternativeFilterCombo.

	# Conflicts:
	#
	ui/org.omnetpp.common.core/src/org/omnetpp/common/ui/FilterCombo.java

2020-04-01  TÖRÖK Attila

	ide/scave: LargeTable: fix misalignment of vertical table lines with
	table header

	No need to add LINE_WIDTH to the width of every column.

2020-04-01  TÖRÖK Attila

	ide/scave: LargeTable: fix reversed vertical scrolling.

2020-03-31  Andras Varga

	scave: IDList: copy ctor and move ctor to work as they are supposed to

	Old code pre-dated C++11 move constructors.

	SWIG doesn't do std::move by itself when constructing the return value,
	it needs a little convincing, in the form of %typemap(out).

2020-03-31  Andras Varga

	scave: ResultFileManager: remove getAllItems() includeFields option, and
	related -y/--add-itervars-as-scalars option from opp_scavetool

	It was not used/working, because we no longer add itervars as "fake"
	scalars to the data at load time.

2020-03-27  Andras Varga

	ide/scave: DataTree: don't restore selection after setting tree levels

	Reason: setSelectedIDs() is very inefficient and makes the GUI totally
	freeze.

2020-03-30  Andras Varga

	ide/scave: BrowseDataPage: use TimeTriggeredProgressMonitorDialog

2020-03-26  Andras Varga

	ide/scave: DataTreeContentProvider: group children by batches of 1000

	Reason: SWT Tree widget doesn't like havong too many child nodes,
	performance starts to degrate around a few thosand nodes.

	Group node uses icon of the first child (which is usually the same as the
	icon of all children)

	Also: don't expand any tree level by default (due to performance reasons)

2020-03-31  Andras Varga

	scave: ResultFileManager: rename: getUniqueNames() ->
	getUniqueResultNames(), etc.

2020-03-28  Andras Varga

	ide/scave: DataTreeContentProvider: use new
	ResultFileManager.getPartitionByRun() method

	Signed-off-by: Andras Varga <andras@omnetpp.org>

2020-03-28  Andras Varga

	ide/scave: DataTreeContentProvider: run-based IDList filtering

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: matchesPath() is apparently not
	needed, it always matches

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: one level less indent depth, as
	matchesPath() apparently always matches

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: use IDList append() instead of add()

	add() is slow because it checks for uniqueness which makes inserting n
	elements O(n^2). append() doesn't do that, so n elements can be inserted
	in O(n) time

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: give more specific name to the IDList
	that is the input to the whole tree

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: extract gigantic loop as
	sortIdListToChildNodes() to ease further refactoring

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: shouldSort doesn't need to be checked
	for each ID

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: further decrease freaking indent
	depth

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: adding comments to help make sense of
	the code

2020-03-30  Andras Varga

	ide/scave: DataTreeContentProvider: changed from long[] to IDList

2020-03-27  Andras Varga

	ide/scave: DataTreeContentProvider: refactoring: reduce number of indent
	levels and method length

2020-03-26  Andras Varga

	ide/scave: DataTreeContentProvider: simplify equals() and hashCode() for
	some of the Node classes

2020-03-26  Andras Varga

	ide/scave: DataTree performance measurements (refresh is slow)

2020-03-28  Andras Varga

	scave: ResultFileManager: added getPartitionByRun()

2020-03-27  Andras Varga

	scave: IDList java wrapper: remove tons of stuff we don't actually use

2020-03-30  TÖRÖK Attila

	nits: Replace "vica versa" with "vice versa" everywhere. Fixes
	docs.omnetpp.org#11.

2020-03-17  TÖRÖK Attila

	ide/scave: Small fix for scatterchart_legacy template.

2020-03-26  TÖRÖK Attila

	scave: Fix CSV-R exporting of PARAMETER type results.

2020-03-26  Andras Varga

	ide/scave: Export Data: Do it with a modal progress dialog, instead of a
	background job

	This is probably better in-line with user expectations, and allows better
	error reporting.

	Also: getAllItems(false, false): on need to include fabricated scalars,
	as export
	(esp. CSV Records) aims to reproduce (a subset of) the original content
	of the the result files.

	Also: nits.

2020-03-26  Andras Varga

	ide/scave: BrowseData page: progress monitor during copying selection to
	clipboard as csv

2020-03-26  Andras Varga

	ide/scave: fix NPE in CutAction.isApplicable (selection was null)

	Ensure selection is never null in isApplicable() Also: no need to query
	selection if current editor is not a ScaveEditor

2020-03-24  Andras Varga

	ide/scave: replace Table with LargeTable on the Browse Data page, for
	scalability.

	Also: raise item number limit accordingly.

2020-03-25  Andras Varga

	ide/common: fix clipping issue in custom-drawn widgets: content was not
	clipped at the right edge of the control

	It could spill over and be drawn over neighboring widgets.

2020-03-25  Andras Varga

	ide/common: VirtualTable,LargeTable: ensure indent=4 actually results in
	4 (not 3) pixels of space

	Don't include separator line width into the indentation.

	Also: improve scope of x and y variables

2020-03-21  Andras Varga

	ide/common: Added LargeTable, a table widget that scales up to an large
	number of lines.

	Code is losely based on VirtualTable.

2020-03-22  Andras Varga

	ide/common: VirtualTable small fix

2020-03-23  Andras Varga

	ide/common: VirtualTable: refined class comments

2020-03-21  Andras Varga

	ide/common: VirtualTable: factor out a base class for row renderers

2020-03-21  Andras Varga

	ide/common: IVirtualTableRowRenderers: don't need LabelProvider as base
	class

2020-03-24  Levente Mészáros

	ui: Fixed compilation error in SequenceChart, reverted some changes.

2020-03-24  Rudolf Hornig

	ide: increased heap size for IDE.

2020-03-20  Levente Mészáros

	SequenceChart: Fixed resultFileManager.loadFile call after rebase.

2020-03-20  Levente Mészáros

	SequenceChart: Reworked the whole implementation including several major
	changes.

	The new chart supports selecting events and axes independently. Axis can
	be expanded and collapsed. Internal data structures are more explicit and
	flexible. Added new selectable objects: axes, method calls, message
	sends. Added the ability to measure time between selected objects.
	Several other unlisted changes.

2020-03-20  Levente Mészáros

	ui: Followed recent changes in EventLogTableRowRenderer.

2020-03-20  Levente Mészáros

	ui: Added support for arbitrary objects in EventLogSelection.

2020-03-20  Levente Mészáros

	ui: Added support for column based label provider to ModuleTreeViewer.

2020-03-20  Levente Mészáros

	SequenceChart: Added new filter parameters.

2020-03-20  Levente Mészáros

	SequenceChart: Added plugin dependency on ned.core and ned.model plugins.

2020-03-20  Levente Mészáros

	ui: Added Int64Vector to swig interface file.

2020-03-20  Levente Mészáros

	ui: Added ModuleTreeItemLabelProvider which supports multiple columns and
	icons.

2020-03-20  Levente Mészáros

	ui: Dropped incorrectly implented and osolete VectorFileUtil.

2020-03-20  Levente Mészáros

	ui: Fixed warnings in LargeScrollableCanvas.

2020-03-20  Levente Mészáros

	ui: Fixed CachingCanvas incorrect clipping handling.

2020-03-20  Levente Mészáros

	SequenceChart: Added __TODO and __TEST files.

2020-03-20  Levente Mészáros

	SequenceChart: Added a lot of icons for the new actions.

2020-01-06  Levente Mészáros

	SequenceChart: added horizontally finite sized events.

	This allows separating message sends and method calls from each other
	horizontally.

	INCOMPLETE

2013-09-27  Levente Mészáros

	SequenceChart: Factored out a separate style provider.

2020-03-18  Andras Varga

	ide/scave: on-demand computation of filter hints (precomputing on IDList
	change was slow)

	As opposed to up-from computation when IDList changed / Browse Data page
	was activated.

2020-03-19  Andras Varga

	ide/scave: FilterBar: better layout

	FilterCombo height to match that of the Text field (in Advanced Filter
	mode); even gaps above and below

2020-03-18  Andras Varga

	ide/scave: use CustomCombo for filters.

	Motivation:
	- can display an "empty" message (as hint)
	- can display "Erase" icon
	- uses Table widget not List
	- allows on-demand filling of dropdown and a "[More]" item in the list
	- widget height can be set

2020-03-18  Andras Varga

	ide/scave: rename: FilteringPanel -> FilterBar, (inside
	FilteredDataPanel) data -> dataControl

2020-03-18  Andras Varga

	ide/scave: digit grouping on the tabs of the Browse Data page

	For readability.

2020-03-18  Andras Varga

	ide/scave: limit number of items in DataTable/DataTree, due to poor GTK
	performance

	Reason: Table.setItemCount() has poor performance over GTK(3), because it
	calls GTK.gtk_list_store_append() (or GTK.gtk_list_store_remove() when
	the number rows need to be reduced) repeatedly in a loop. It may take
	several seconds
	(or several tens of seconds) when number of affected rows is more than a
	few times 10,000. This is independent whether TableItems have been
	created or not (i.e. SWT.VIRTUAL does not help).

	Experience: limiting to 100,000 makes initial Table.setItemCount()
	reasonably fast. However, when filter reduces number of rows
	significantly, Table.setItemCount() may still take several times 10s.

	Also: measure setItemCount() time separately from other processing

2020-03-17  Andras Varga

	ide/scave: ResultFileManagerEx: some cleanup

2020-03-18  Andras Varga

	ide/scave: FilteringPanel: fix after elimination of the Filter class

	Its constructor used to replace "" with "*", which now needs to be done
	manually.

2020-03-17  Andras Varga

	ide/scave: decremental programming: Filter class eliminated

	It was a wrapper around a String, with not much added value

2020-03-17  Andras Varga

	ide/scave: formatting (we prefer no linebreak before "{"); PARAMETERS
	case was missing

2020-03-18  Andras Varga

	ide/common: CustomCombo: added hooks to allow on-demand filling of
	dropdown and other customizations

	Allow more style bits: SWT.SEARCH, SWT.ICON_CANCEL, etc. Make combo as
	tall as standard Text field.

2020-03-18  Andras Varga

	ide/common: ImageCombo renamed to CustomCombo

2020-03-18  Andras Varga

	ide/common: ImageCombo: document where the code was taken from

2020-03-14  Andras Varga

	ide/scave: runtime measurement added at a number of places

	charttemplateregistry, updateActions, FilteredDataPanel, ...

2020-03-15  Andras Varga

	ide/scave: don't spam debug output with "Loading chart template X"
	messages

2020-03-16  Andras Varga

	ide/common: UIUtils: added 2 utility methods

	- timeExistingListeners(): measures the runtime of listeners installed on
	a control, etc
	- removeAllListeners()

2020-03-17  Andras Varga

	ide/common: Debug.time() to use System.nanoTime() not currentTimeMillis()

2020-03-14  Andras Varga

	ide/scave: Inputs page: separate Refresh and Reload actions

2020-03-14  Andras Varga

	ide/scave: ResultFilesTracker: error handling & nits

2020-03-14  Andras Varga

	ide/scave: performance: when loading thousands of files, do not report
	progress after each one

2020-03-14  Andras Varga

	ide/scave: remove inputName from loadFile() arg list

	Issue: when loadFile() detects that a file is already loaded and up to
	date, but its inputName field is different, should it update? In the IDE,
	it should, but this decision should not be built into the API.

	So in the new code, we call setFileInput(file,inputName) separately after
	the loadFile() call.

2020-03-14  Andras Varga

	ide/scave: collectResultFiles(): fix resolving directory names as Input

2020-03-12  Andras Varga

	ide/scave: converted to *synchronous* result file loading

	Reason: better control over how things happen; better performance, as
	writers (ResultFileManager::loadFile) and readers (page updates) do not
	keep blocking each other; much simplified code. Also, more predictable UI
	for users (with async loading, set of loading results can be constantly
	changing due to result files being created/written as the user working,
	which can be confusing).

	Key points of new solution:
	- put the whole loading under a single withWriteLock() call
	- report progress via ProgressMonitorDialog
	- cancellation via ProgressMonitor and also InterruptedFlag (latter can
	 interrupt loading of a single file as well)
	- reduced change notification: do not report individual load/unload
	events,
	 only fire one update when the bulk loading finished
	- ScaveEditor: do initial loading in an asyncExec() to improve startup
	experience.
	 Without the asyncExec, the progress dialog could appear (and go
	 completely through) *before* the main workbench window appears.

2020-03-13  Andras Varga

	ide/scave: ProgressMonitorDialog for BrowseDataPage refresh

2020-03-13  Andras Varga

	ide/scave: only update the Browse Data page when it's visible (i.e. is
	the active tab)

	Otherwise, every change on the Inputs page causes a potentially
	significant UI freeze while the Browse Data page is updating
	(while it's not even the active tab).

	Change: Make the BrowseDataPage listen on changes instead of DataTree. We
	can better react on page change (when BD page becomes active) there.

2020-03-14  Andras Varga

	ide/scave: InputsTree: added time measurements

2020-03-13  Andras Varga

	ide/scave: added some class comments

2020-03-13  Andras Varga

	ide/common: Debug: add the time()/timed() functions for runtime
	measurement of code fragments

2020-03-13  Andras Varga

	ide: modernize: use type parameters for raw ListenerLists everywhere

2020-03-12  Andras Varga

	ide/scave: InputFileDialog: allow entering folders as well

2020-03-12  Andras Varga

	ide/scave: added Refresh button to the Inputs page (reloads result files)

2020-03-12  Andras Varga

	ide/scave: DataTree tree small fix

	Fix NPE on editor close; add type parameter to ListenerList

2020-03-12  Andras Varga

	ide/scave: delete remains of "computed scalars" from old Scave

2020-03-12  Andras Varga

	ide/scave: ResultFilesTracker: remove unused code

2020-03-12  Andras Varga

	ide/scave: Amendment to file loading: unload extra files (those no longer
	pulled in by any input)

2020-03-12  Andras Varga

	ide/scave: Inputs page: Improve scalability by displaying files in groups
	if necessary.

	Reason: TreeViewer doesn't like having many thousand childen in a node;
	it takes it several seconds to display them (excluding content and label
	provider time). SWT.VIRTUAL doesn't help.

	So, if there are more than a few thousand files per input, group them in
	batches of 1000 in the tree: [0..999], [1000..1999], etc. Makes the tree
	more navigable too.

2020-03-11  Andras Varga

	ide/scave: Inputs page working again, and is quite scalable (should be
	good for >>10,000 files)

	ResultFiles store which input (in the IDE) they came from, so that we can
	have an efficient getFilesForInput().

2020-03-02  Andras Varga

	ide/scave: Added support for recursively loading scalar and vector files
	- WIP but working

	Loading 10,000 files takes infinitely long (>5min). Now it takes 3..5s,
	similar to what it takes in opp_scavetool.

	Loading is still synchronous (blocks the UI); this will be resolved in
	subsequent commits.

	Inputs page currently doesn't display the loaded files if inputs contain
	'**' or a directory; this will also be resolved in next commits.

	Previously loaded iresult files are not unloaded if their input is
	deleted -- fixed in next commits.

	ResultFilesTracker still a mess -- cleanup is coming.

2020-03-10  Andras Varga

	ide/seqchart: SequenceChart: output vector loading updated to earlier
	commits

2020-03-09  Andras Varga

	ide/scave: ResultFileManagerExt moved into the nativelibs plugin

	As it'll be needed from SequenceChart too.

2020-03-09  Andras Varga

	ide/scave: ResultFileManagerEx updated

	- LoadFlags constants
	- make listener lists typed
	- remove redundant overloaded loadFile() methods

2020-03-11  Andras Varga

	ide/scave: introduced ResultFileManager.runWithReadLock(), and changed to
	lambda syntax nearly everywhere

2020-03-10  Andras Varga

	ide/scave: wrap fileutil.h's collectFilesInDirectory() and
	collectMatchingFiles()

2020-03-07  Andras Varga

	ide/scave: show Python execution warning on opening an ANF file with
	charts

2020-03-06  TÖRÖK Attila

	ide/scave: Legacy analysis loading/conversion revisited.

	add back the scatterchart_legacy chart template and use it use existing
	(new) chart templates for other chart types move legacy chart id
	constants add filter expression conversion to =~ syntax add scatterchart
	to old anf test file

2020-03-04  TÖRÖK Attila

	ide/scave: Add 3D and boxwhiskers chart templates

2020-03-05  TÖRÖK Attila

	ide/scave: Fix plot.hist without given minvalue or maxvalue

2020-03-04  Andras Varga

	ide/scave: InputsTree: annotate tree items with file sizes, content
	summaries for runs, etc.

2020-03-05  Andras Varga

	ide/scave: Inputs page: performance optimization

2020-03-04  TÖRÖK Attila

	ide/scave: fix plot.py: set_warning can be used on MPL charts too.

2020-03-04  Andras Varga

	ide/scave: use StyledText instead of Text for multiline input; started
	content assist for Advanced pages

2020-03-04  Andras Varga

	ide/scave: x:id.isFilter="true" -> x:id.contentAssist="filter"; undo/redo
	for (future) StyledText fields

2020-03-04  Andras Varga

	ide/scave: Use x:id.default instead of x:default, because this way forms
	can be loaded with vanilla XSWT too

2020-03-03  Andras Varga

	ide/scave: ChartScriptEditor: members made private (except Actions which
	should probably be moved)

2020-03-03  Andras Varga

	ide/scave: cosmetics

2020-03-04  TÖRÖK Attila

	ide/scave: Delete old charttemplates.

2020-03-03  TÖRÖK Attila

	ide/scave: Remove the old and incomplete plotting API in plot.py, keep
	only the MPL-ish API.

2020-01-10  Levente Mészáros

	ui: Fixed translation in CachingCanvas by moving it from GC to
	SWTGraphics.

	The SWTGraphics will set the transmform on GC when rotate is called
	without knowing that there's a transform already set.

2020-03-02  Levente Mészáros

	pychart: Updated pickle.jar to version 4.23.

2020-03-03  Andras Varga

	BrowseDataPage: remove obsolete TODO comment (it works now)

2020-03-03  Andras Varga

	Set Filter For Chart action: fix: only allow if chart has a "filter"
	property; don't show empty label

2020-03-03  Andras Varga

	Set Filter For Chart action: added icon

2020-03-03  Andras Varga

	Set Filter menu item made to work

2020-03-03  Andras Varga

	Cosmetics on Browse Data context menu: put menu items into Title Case,
	Copy Data icon, action ordering

2020-03-02  Andras Varga

	Export Chart Input action

2020-03-03  Andras Varga

	ChartScriptEditor: refactoring: merged createMatplotlibMenuManager() and
	createNativeMenuManager()

	Differences were small.

2020-03-03  Andras Varga

	added ExportChartAction (exports current chart's image/data)

2020-03-03  Andras Varga

	ChartScriptEditor: remove duplicate SaveImageAction instance

2020-03-03  Andras Varga

	icons: Save Image, Copy Image

2020-03-02  TÖRÖK Attila

	ide/scave: Make chart export job detect task completion instantly.

2020-02-21  TÖRÖK Attila

	ide/scave: barchart template: title generation fixes

2020-02-21  TÖRÖK Attila

	ide/scave: update plot.py to better reflect the pyplot API, add missing
	methods to the chartool impl

2020-03-02  TÖRÖK Attila

	ide/scave: Close both Console streams in ChartScriptEditor.dispose().

2020-03-02  TÖRÖK Attila

	ide/scave: Select and reveal the first checked chart when
	ExportChartsDialog opens.

2020-03-02  TÖRÖK Attila

	ide/scave: Fix ChartExportDialog checkbox state save/restore.

2020-03-02  TÖRÖK Attila

	ide/scave: Clean up the consoles created by previous chart export
	actions.

2020-03-02  TÖRÖK Attila

	ide/scave: Fix PythonProcessPool.extendPythonPath().

2020-02-22  Andras Varga

	ide/scave: export.xswt: added image width/height, data file name

2020-03-02  Andras Varga

	ide/common: IconGridViewer: fix issues around initial selection

2020-02-26  Andras Varga

	ide/scave: ExportChartsDialog: allow data export, image DPI, save dialog
	settings, etc...

2020-02-29  Andras Varga

	ide/common: SWTFactory improved

2020-02-29  Andras Varga

	ide/scave: IResourceSelectionDialog: add "New Folder" button

2020-02-22  Andras Varga

	ide/scave: ExportChartsDialog: use SWTFactory for conciseness

2020-02-29  Andras Varga

	ide/scave: ScaveEditor: cosmetics

2020-02-22  Andras Varga

	ide/scave: ChartTemplateRegistry: collect template properties from XSWT
	pages (x:id, x:default attributes) instead of the propertyName lines of
	the .properties files

	Reason: it's nonsense that when a new field is added to an XSWT page, all
	templates that use that page need to be updated.

2020-02-22  Andras Varga

	ide/scave: ChartExport: collect args into a Context class to reduce
	number of places to change when a new one is added

2020-02-21  Andras Varga

	ide/scave: SaveImageAction: simplified now that NativeChartViewer also
	supports multiple raster formats

2020-02-21  Andras Varga

	ide/common: CachingCanvas can now save in multiple formats

2020-02-21  Andras Varga

	ide/scave: ChartExport: refactoring, labels, allow passing in stopOnError
	and numConcurrentProcesses

2020-02-21  Andras Varga

	ide/scave: ChartExport: change into anf file's dir / add it to sitedir
	during export

2020-02-21  TÖRÖK Attila

	ide/scave: Warn about non-numeric itervar values in scatterchart
	template.

2020-02-20  TÖRÖK Attila

	ide/scave: Factor out column selection of bar/scatter charts into
	utils.py

2020-02-20  TÖRÖK Attila

	ide/scave: Add automatic series/groups and xaxis/isoline parameter
	guessing to barchart and scatterchart templates.

2020-02-20  TÖRÖK Attila

	ide/scave: Put the widgets in the Bars and Histograms XSWT pages into a
	group (frame).

2020-02-19  TÖRÖK Attila

	ide/scave: Fixes for the barplot templates: bar placement and label
	rotation works (baseline is questionable...)

2020-02-20  TÖRÖK Attila

	ide/scave: ChartExport job cancellation support.

2020-02-20  TÖRÖK Attila

	ide/scave: Fix scatter chart templates: do not use auto as default
	linecolor

2020-02-21  Andras Varga

	ide/scave: SaveImageAction to use SaveAsDialog to avoid problems with
	FileDialog

	1. Ask for workspace path, not filesystem path 2. Confusing filter combo
	(filename extension doesn't change when user chooses from combo)

2020-02-21  Andras Varga

	ide/scave: SaveImageAction: improve file dialog -- note type selection
	doesn't work properly

2020-02-20  Andras Varga

	ide/scave: SaveImageAction refactored

2020-02-20  Andras Varga

	ide/scave: restore method name in IMatplotlibFigureCanvas (as it's part
	of a Python interface)

2020-02-20  Andras Varga

	ide/scave: merged SaveMatplotlibImageAction into SaveImageAction

2020-02-20  Andras Varga

	ide/scave: export image -> save image (it is VERY different from how
	export works)

2020-02-20  Andras Varga

	ide/scave: ExportChartsAction: more complicated initial selection

2020-02-20  Andras Varga

	ide/scave: remove GraphicalExportFileFormats class, simplify
	ExportChartsDialog

2020-02-19  Andras Varga

	ide/scave: templates: added export commands to chart scripts, Export
	pages to template dialogs

2020-02-20  Andras Varga

	ide/scave: removed ScaveModelLabelProvider (it was only used in the
	Export dialog, but no longer)

2020-02-18  Andras Varga

	ide/scave: image and data export reimplemented in the ChartExport class

2020-02-20  Andras Varga

	ide/scave: ChartProvider: added extraProperties support (needed for image
	export)

2020-02-18  Andras Varga

	ide/scave: remove classes left over from the old image export
	implementation

	We'll use Matplotlib for image export, which uses simple strings to
	identify the format.

2020-02-20  Andras Varga

	ide/scave: PythonProcessPool: added setShouldSetOmnetppMplBackend(),
	slight refactoring

2020-02-18  Andras Varga

	common: CollectionUtils: added type parameters

2020-02-17  TÖRÖK Attila

	ide/scave: draw overflows and underflows in outline mode too, properly
	take underflows and overflows into account when transforming histograms
	to pdf/cdf (and transform those too)

2020-02-17  TÖRÖK Attila

	ide/scave: add default value of true to show_overflows to
	histogramchart_native.properties

2020-02-17  TÖRÖK Attila

	ide/scave: LargeGraphics: Do not forget the first point of polylines when
	clipping to the "safe coordinate" region

2020-02-17  TÖRÖK Attila

	ide/scave: rename show_overflows option label in histograms.xswt

2020-02-17  TÖRÖK Attila

	ide/scave: NativeChartViewer: Do not restore zoom if there was no
	scrollbar visible (in x and y directions separately)

2020-02-17  TÖRÖK Attila

	ide/scave: plot.py: remove debug print and TODO comment

2020-02-17  TÖRÖK Attila

	ide/scave: add histogram color cycling from python, draw underflows and
	overflows - in Solid mode only so far

2020-02-13  TÖRÖK Attila

	ide/scave: add PROP_[X|Y]_AXIS_SHOW_[TITLE|LABELS] properties

2020-02-13  TÖRÖK Attila

	ide/scave: plot.xticks and setGroupLabels for bar charts (not visible for
	whatever reason)

2020-02-13  TÖRÖK Attila

	ide/scave: Bar charts work, with color cycling in Python!

2020-02-13  TÖRÖK Attila

	ide/scave: renames: row -> group, column -> series

2020-02-13  TÖRÖK Attila

	ide/scave: renames: IScalarDataset -> IGroupsSeriesDataset, merge
	StringValued Dataset classes into plain ones, Python*Dataset -> *Dataset

2020-02-13  TÖRÖK Attila

	ide/scave: Bar chart plotting rework, removed unused classes
	(IAveraged*Dataset, etc.)

2020-02-14  Andras Varga

	ide/scave: chart template dialog: load images for <img> tags in html
	descriptions

2020-02-14  Andras Varga

	ide/scave: Chart template: keep origin folder

2020-02-14  Andras Varga

	ide/common: HTMLUtils: allow an IImageProvider to be used for loading
	images

2020-02-13  Andras Varga

	ide/scave: chart template selection dialog: refactoring; show template
	data at top

2020-02-13  Andras Varga

	ide/scave: ChartTemplate: remove remaining unused setters

2020-02-12  Andras Varga

	ide/scave: Charts page: toolbar icon order; cosmetics

2020-02-12  Andras Varga

	ide/scave: template xswt pages: enable scrollbars for multi-line textedit
	widgets

2020-02-12  Andras Varga

	ide/scave: remove template icons from the Charts page toolbar

2020-02-12  Andras Varga

	ide/scave: LinePlot, HistogramPlot: removed auto-cycling on (line)color
	and marker, and inferring drawstyle from interpolationmode

2020-02-12  Andras Varga

	ide/scave: Bars.Baseline.Color property added; empty PlotDefaults class
	removed

2020-02-12  Andras Varga

	ide/scave: added Bar.OutlineColor property; automatic cycling for
	Bar.Color removed

2020-02-12  Andras Varga

	ide/scave: use replacement of deprecated method: crop() -> shrink()

2020-02-12  Andras Varga

	ide/scave: follow Label.Font->Axis.Label.Font rename

2020-02-12  Andras Varga

	ide/scave: Implemented Plot.Title.Color property

2020-02-12  Andras Varga

	ide/scave: PlotProperty: reorder stuff

2020-02-12  Andras Varga

	ide/scave: PROP_LABEL_FONT->PROP_AXIS_LABEL_FONT,
	PROP_XY_GRID->PROP_GRID, PROP_XY_GRID_COLOR->PROP_GRID_COLOR

2020-02-12  Andras Varga

	ide/scave: Support Insets.LineColor and Insets.BackgroundColor plot
	properties

2020-02-12  Andras Varga

	ide/scave: implemented "grid color" property for native plots

2020-02-12  TÖRÖK Attila

	ide/scave: add missing overrides in MatplotlibChartViewer

2020-02-11  TÖRÖK Attila

	ide/scave: switch the default set of colors to the Tableau 20 palette,
	add a couple more (commented out) options (GNOME 3.32, Tableau 10)

2020-02-12  TÖRÖK Attila

	ide/scave: add manual color and marker cycling, add Cycle seed property
	to all templates

2020-02-11  TÖRÖK Attila

	ide/scave: add Circle type Symbol

2020-02-11  TÖRÖK Attila

	ide/scave: a small whitespace change

2020-02-11  TÖRÖK Attila

	ide/scave: small aesthetic changes to legend and square symbol, auto
	marker type

2020-02-10  TÖRÖK Attila

	ide/scave: implement per-series histogram BarType/DrawStyle/HistogramBar

	also some cosmetic adjustments to alpha and line width of outline mode
	drawing

2020-02-11  TÖRÖK Attila

	ide/scave: when saving a temp chart, also scroll it into view on the
	charts page

2020-02-10  TÖRÖK Attila

	ide/scave: cache chart properties on the Python side, avoid a Py4J error
	while querying

2020-02-12  TÖRÖK Attila

	ide/scave: when saving chart as template, record the empty string as
	default of the filter property

	instead of leaving it out

2020-02-12  TÖRÖK Attila

	ide/scave: SaveChartAsTemplateAction: add name validator to file name
	dialog, refresh folder after done

2020-02-12  TÖRÖK Attila

	ide/scave: add throws CoreException to AbstractScaveAction::doRun()

2020-02-12  Andras Varga

	ide/scave: copyImageToClipboard() added as ChartViewerBase method, to
	allow uniform handling of both types of plots

2020-02-12  Andras Varga

	ide/scave: refactoring:
	ScaveEditor.getActivePlot()/getActiveMatplotlibPlotChartViewer replaced
	by getActiveChartViewer()

2020-02-11  Andras Varga

	ide/scave: SaveChartAsTemplateAction: guts factored out to
	ScaveModelUtil, and refactored for conciseness and readability

2020-02-11  Andras Varga

	ide/scave: SaveChartAsTemplate: ask for file name

2020-02-11  Andras Varga

	ide/scave: added template selection dialog and corresponding "create
	chart from template" action

2020-02-11  Andras Varga

	ide/scave: ExportAction -> ExportMplChartImageAction rename, TODO merge
	with other image export action

2020-02-11  Andras Varga

	ide/scave: Only show "New" submmenu when empty area is right-clicked;
	some rename

2020-02-11  Andras Varga

	ide/scave: remove "Show Properties View" from context menu (as we don't
	show much there)

2020-02-11  Andras Varga

	ide/scave: Save Chart/Goto Chart Definition moved towards the end of the
	context menu

	As they are rarely used (and are on the toolbar).

2020-02-11  Andras Varga

	ide/scave: Action classes moved to the scave.actions package; unused
	obsolete Goto{Chart|Item}Definition classes deleted

2020-02-11  Andras Varga

	ide/scave: Chart actions labels / order refinement

2020-02-11  Andras Varga

	ide/scave: icons adjusted (saturation, brightness)

2020-02-10  Andras Varga

	ide/scave: Action label adjustments, move ToggleShowSourceAction towards
	the end of the toolbar

2020-02-10  Andras Varga

	ide/scave: code.png -> curly brackets icon '{}'

2020-02-10  Andras Varga

	ide/scave: ScaveEditor: remove redundant code

	(ChartScriptEditor lives in a FormEditorPage, so the first "if" will find
	it)

2020-02-10  Andras Varga

	ide/scave: PlotViewerBase -> PlotBase

2020-02-10  TÖRÖK Attila

	ide/scave: TODOs about missing default color values

2020-02-10  TÖRÖK Attila

	ide/scave: remove uneditable chart property declarations from all
	templates

2020-02-10  TÖRÖK Attila

	ide/scave: fill in the defaults for all properties of all chart templates
	so that they can be loaded

2020-02-10  Andras Varga

	ide/scave: SetChartPropertyCommand: add property if doesn't exist

2020-02-09  Andras Varga

	ide/scave: move ChartTemplate class to scave.model package,
	ResetChartToTemplateCommand extends CompoundCommand, add
	SetChartDialogPagesCommand

2020-02-08  Andras Varga

	ide/scave: PlotProperties turned into an eum (PlotProperty) and absorbed
	PlotDefaults

2020-02-09  Andras Varga

	ide/scave: Converter: objectToString() improved

	because we now use it for producing textual default values for plot
	properties.

2020-02-07  Andras Varga

	ide/scave: IconGridLayout: fix: initially came up with canvas being too
	tall (one could scroll well below the icons)

2020-02-07  Andras Varga

	ide/scave: IconGridViewer: fix: scrolling was not possible before first
	resize or model change

2020-02-07  TÖRÖK Attila

	ide/scave: Hist.Data -> Hist.Cumulative, Hist.Density, make them
	configurable per-histogram

2020-02-07  TÖRÖK Attila

	ide/scave: add Bar.Color default as null, more verbose error message
	about missing defaults, allow null BarColor

2020-02-07  TÖRÖK Attila

	ide/scave: restore some more chart templates

2020-02-07  TÖRÖK Attila

	ide/scave: warn about non-unique keys in XY and Histogram Datasets

2020-02-07  TÖRÖK Attila

	ide/scave: reduce debug output noise

2020-02-07  TÖRÖK Attila

	ide/scave: a more descriptive exception text for missing chart property
	default in a loaded template

2020-02-07  TÖRÖK Attila

	ide/scave: fix PlotAction (don't add duplicate "filter" property), update
	comment of CreateTempChartFromTemplateAction

2020-02-07  TÖRÖK Attila

	ide/scave: don't allow adding a property to a chart with duplicate name

2020-02-07  Andras Varga

	ide/scave: getEffectiveDisplayName()->getLabel()

2020-02-07  Andras Varga

	ide/scave: PROP_DRAW_STYLE renamed to include "LINE" into the name

2020-02-06  TÖRÖK Attila

	ide/scave: remove a stale TODO comment

2020-02-06  TÖRÖK Attila

	ide/scave: chart property related adjustments

2020-02-06  TÖRÖK Attila

	ide/scave: add PlotDefaults.hasDefaultValue, use more strict conversion
	in PlotviewerBase.setProperty

2020-02-06  TÖRÖK Attila

	ide/scave: move X.Label.RotateBy widget from common styling page to bars
	page

2020-02-06  TÖRÖK Attila

	ide/scave: add DEFAULT_LINE_COLOR and DEFAULT_SYMBOL_TYPE

2020-02-06  TÖRÖK Attila

	ide/scave: remove PROP_DISPLAY_NAME (Line.Name) property

2020-02-06  TÖRÖK Attila

	ide/scave: add plot.get_supported_property_keys
	(INativeChartPlotter.getSupportedPropertyKeys)

2020-02-06  TÖRÖK Attila

	ide/scave: do not allow null as property value, mandate default value for
	all properties on template loading, make SetChartPropertyCommand more
	strict

2020-02-17  TÖRÖK Attila

	ide/scave: do not populate and setup controls on charteditform as many
	times as there are tabs

2020-02-06  TÖRÖK Attila

	ide/scave: fix copy-paste error in PlotDefaults (Y_AXIS_MIN)

2020-02-06  TÖRÖK Attila

	ide/scave: plot.py: fix ylim (left, right -> top, bottom)

2020-02-06  TÖRÖK Attila

	ide/scave: XXX do not set null chart properties on the viewer

2020-02-06  TÖRÖK Attila

	ide/scave: add some linechart_native template defaults

2020-02-06  TÖRÖK Attila

	ide/scave: do not add duplicate filter property when creating chart from
	template

2020-02-06  TÖRÖK Attila

	ide/scave: declare more chart properties in the linechart_native template

2020-02-06  TÖRÖK Attila

	ide/scave: fix NPE in Property.equals

2020-02-06  TÖRÖK Attila

	ide/scave: add plot.grid() for native charts

2020-02-06  Andras Varga

	ide/scave: misc fixes on plot properties

2020-02-06  Andras Varga

	ide/common: ColorFactory: added asRGBStrict(); asRGB() now validates
	better

	Rejects #rgb/@hsb strings of invalid (non-6) length, instead of silently
	returning an incorrect answer.

2020-02-06  Andras Varga

	ide/scave: plot widgets' setProperty() methods made stricter

2020-02-06  Andras Varga

	ide/scave: Converter: error-swallowing stringToX() methods renamed to
	tolerantStringToOptionalX(); added other variants too

2020-02-06  Andras Varga

	ide/scave: LinePlot: refactored LineProperties for clarity and
	correctness

2020-02-05  Andras Varga

	ide/scave: actually use defaults for initializing the chart at creation;
	fixes

2020-02-05  TÖRÖK Attila

	ide/scave: throw a KeyError when reading a non-existent chart property,
	instead of returning None

2020-02-05  TÖRÖK Attila

	ide/scave: add SaveChartAsTemplateAction

2020-02-05  Andras Varga

	ide/scave: chart properties accept default value after a colon;
	ChartTemplate: no need for setters for an immutable class

2020-02-05  TÖRÖK Attila

	ide/scave: small tweak to styling_mpl tab (make the legend frame checkbox
	an "enabler")

2020-02-05  TÖRÖK Attila

	ide/scave: update matplotlib style list in styling_mpl.xswt

2020-02-05  TÖRÖK Attila

	ide/scave: fix NPE in matplotlib axis limits restoration

2020-02-05  Andras Varga

	ide/scave: eliminate PropertyMap

2020-02-05  Andras Varga

	ide/scave: follow renames: rename corresponding class members too

2020-02-05  Andras Varga

	ide/scave: LinePlotViewer->LinePlot, BarPlotViewer->BarPlot,
	HistogramPlotViewer->HistogramPlot

2020-02-05  Andras Varga

	ide/scave: LinePlot->Lines, BarPlot->Bars,HistogramPlot->Histograms

2020-02-17  TÖRÖK Attila

	ide/scave: collect all plot properties into PlotProperties

2020-02-05  Andras Varga

	ide/scave: fixes: resetProperties() can only be called when parts have
	been created

2020-02-05  Andras Varga

	ide/scave: Don't use PlotDefaults inside the plot widgets

2020-02-05  Andras Varga

	ide/scave: getPropertyNames(); use PlotDefaults for construction and for
	clear()

2020-02-04  Andras Varga

	ide/scave: added PlotDefaults.getDefaultPropertyValueAsString()

2020-02-04  Andras Varga

	ide/scave: BarPlotViewer,HistogramPlotViewer,LinePlotViewer: remove
	implicit defaults

2020-02-04  Andras Varga

	ide/scave: remove doClear(IPropertySource2 propSource)

2020-02-04  Andras Varga

	ide/scave: rename some inner classes

2020-02-17  TÖRÖK Attila

	ide/scave: delete chart property descriptor stuff

2020-02-04  TÖRÖK Attila

	ide/scave: move property mapping of plot.py into impl_ide, implement
	bar() for native charts

2020-02-04  TÖRÖK Attila

	ide/scave: move preconfigure and postconfigure invocations into the chart
	scripts instead of utils

2020-02-04  TÖRÖK Attila

	ide/scave: improve barchart template

2020-02-04  TÖRÖK Attila

	ide/scave: prefix the non-literal combo content specifiers with $ in
	chart edit forms

2020-02-04  TÖRÖK Attila

	ide/scave: add barchart templates

2020-02-03  TÖRÖK Attila

	ide/scave: add histogramchart_mpl chart template

2020-02-03  TÖRÖK Attila

	ide/scave: add initial histogramchart_native template

2020-02-03  TÖRÖK Attila

	ide/scave: declare all properties in generic_xyplot_native template

2020-02-03  TÖRÖK Attila

	ide/scave: don't do polygon/line clipping on line marker symbols. this is
	a performance optimization.

2020-02-03  TÖRÖK Attila

	ide/scave: lineplot: make linewidth a float instead of integer, remove
	corresponding hack

2020-02-03  TÖRÖK Attila

	ide/scave: fix steps-mid (the first point had no line), and one
	simplification

2020-02-03  TÖRÖK Attila

	ide/scave: implement steps-mid, allow dashed/dotted/dashdot line styles
	with steps plotter

2020-02-03  TÖRÖK Attila

	ide/scave: Add a bunch of line marker symbol types.

	- make SquareSymbol and DiamondSymbol subclasses of PolygonSymbol
	- draw Cross and Plus symbols as MultilineSymbols.
	- add ThinDiamondSymbol octagon, add hline, vline, pentagon, star
	symbols,
	 rotated variants of TriangleSymbol; MultilineSymbol, and TriSymbol

2020-02-03  TÖRÖK Attila

	ide/scave: add a HACK for setting (float) line width from the dialog

2020-02-03  TÖRÖK Attila

	ide/scave: fix dashed and dotted linestyles

2020-02-03  TÖRÖK Attila

	ide/scave: Make key optional and take a dict of line properties in plot()

2020-01-31  TÖRÖK Attila

	ide/scave: don't try to restore chart limits (zoom, pan) saved from empty
	charts, dont try tight_layout in native charts

2020-01-31  TÖRÖK Attila

	ide/scave: try to convert itervars to numbers in the scatterchart
	template, do a tight_layout in postconfigure

2020-01-30  TÖRÖK Attila

	ide/scave: add scatterchart_itervars_mpl, fixup some other templates

2020-01-30  TÖRÖK Attila

	ide/scave: do not fill the "hinted" comboboxes multiple times in chart
	edit forms

2020-01-30  TÖRÖK Attila

	ide/scave: TODO items

2020-01-30  TÖRÖK Attila

	ide/scave: do not draw triangle symbols of 2 and 3 differently than
	larger ones

2020-01-30  TÖRÖK Attila

	ide/scave: add scatterchart_itervars chart template

2020-01-30  TÖRÖK Attila

	ide/scave: add support for annotating checkboxes as "enablers" in chart
	template dialogs, annotate the current enablers

2020-01-30  TÖRÖK Attila

	ide/scave: avoid NPE when there is no IDList selection yet

2020-01-30  TÖRÖK Attila

	ide/scave: mpl: also keep the last active action. add some comments

2020-01-30  TÖRÖK Attila

	ide/scave: mpl: also keep the home nav position in the stack when setting
	the "previous" one (to be kept)

2020-01-30  TÖRÖK Attila

	ide/scave: fix an exception when pressing delete on the browse data page

2020-01-29  TÖRÖK Attila

	ide/scave: HACK stability fix for saving/restoring mpl axis limits

2020-01-29  TÖRÖK Attila

	ide/scave: add SetChartIsTemporaryCommand, factor out chart saving, ask
	for name when keeping temporary chart upon tab close

2020-01-29  TÖRÖK Attila

	ide/scave: save and restore axis limits (i.e., view, pan, zoom,
	navigation) on script re-execution

2020-01-29  TÖRÖK Attila

	ide/scave: NPE fix in ResetChartToTemplateAction

2020-01-29  TÖRÖK Attila

	ide/scave: ChartEditForm: restore functionality to switch to last used
	tab

2020-01-29  TÖRÖK Attila

	ide/scave: remove "Plot with Matplotlib" action, make the generic Plot
	action use the most recently used template

2020-01-29  TÖRÖK Attila

	ide/scave: minor tweaks to legacy line chart

2020-01-29  TÖRÖK Attila

	ide/scave: add a "rename chart" action

2020-01-29  TÖRÖK Attila

	ide/scave: remove chart renaming support using magic property key from
	ChartEditDialog

2020-01-29  TÖRÖK Attila

	ide/scave: add a "Reset chart to template" action ++

2020-01-29  TÖRÖK Attila

	ide/scave: add reset chart to template action

2020-01-30  Andras Varga

	ide/scave: markers adjusted

2020-01-30  Andras Varga

	ide/scave: LineType -> DrawStyle (a'la Matplotlib)

2020-01-30  Andras Varga

	ide/scave: Lines page: added linestyle, linewidth; agnostic of
	mpl/native; params modeled after mpl

2020-01-30  Andras Varga

	ide/scave: LineStyle, LineWidth

2020-01-29  Andras Varga

	ide/scave: LineType, SymbolType: icons, etc

2020-01-29  Andras Varga

	ide/scave: LineType.Dots/Points replaced by LineType.None; added
	SymbolType.Point

2020-01-29  Andras Varga

	ide/scave: LargeCanvas: eliminate allocations in drawLine() (used by
	Scave line plotters) and some other methods

2020-01-29  Andras Varga

	ide/scave: LinePlotter: reduce number of setAntialias() calls

2020-01-29  Andras Varga

	ide/scave: LinearLinePlotter: use plotSymbols() for symbols plotting

2020-01-29  Andras Varga

	ide/scave: chart templates++

2020-01-28  Andras Varga

	ide/scave: Added generic matplotlib plot

2020-01-28  Andras Varga

	ide/scave: Legend styling

2020-01-28  Andras Varga

	ide/scave: made Advanced tab work on native charts; fixes

2020-01-28  Andras Varga

	ide/scave: generic_xyplot_[mpl/native] templates

2020-01-28  Andras Varga

	ide/scave: plot_xy xswt page

2020-01-28  Andras Varga

	ide/scave: xxx (plot_xy chart template)

2020-01-28  Andras Varga

	ide/scave: added xlim(), ylim(); reorganized template pages

2020-01-28  Andras Varga

	ide/scave: charttemplates: existing stuff moved to old/

2020-01-28  Andras Varga

	ide/scave: linechart templates improved

2020-01-28  Andras Varga

	ide/scave: Graph.Title -> Plot.Title

2020-01-28  Andras Varga

	ide/scave: ChartDefaults -> PlotDefaults

2020-01-27  TÖRÖK Attila

	ide/scave: Add a Titles page to the MPL linechart template.

2020-01-28  Andras Varga

	ide/scave: lineplot_mpl

2020-01-27  Andras Varga

	ide/scave: linechart++

2020-01-27  Andras Varga

	ide/scave: simplify linechart code

2020-01-27  Andras Varga

	ide/scave: matplotlibrc properties need to be prefixed with
	"matplotlibrc."; only done in line chart pages

2020-01-27  Andras Varga

	ide/scave: IconGridViewer: more convenient default width

2020-01-27  Andras Varga

	ide/scave: EditChartDialog: cosmetics

2020-01-27  Andras Varga

	ide/scave: EditChartDialog: display chart type; save even if chart is not
	opened

2020-01-27  TÖRÖK Attila

	ide/scave: clear all properties (including individual bar/line/histogram
	props) before rerunning the script

2020-01-27  TÖRÖK Attila

	ide/scave: rename: ChartVisualProperties -> PlotProperties

2020-01-27  TÖRÖK Attila

	ide/scave: minor cosmetic fixes to ChartViewerBase and subclasses

2020-01-27  TÖRÖK Attila

	ide/scave: rename classes: IPlotWidget -> IMatplotlibWidget,
	IPyFigureCanvas -> IMatplotlibFigureCanvas

2020-02-17  TÖRÖK Attila

	ide/scave: rename classes: ChartViewer -> PlotViewerBase, IChartView ->
	IPlotViewer, etc.

2020-01-27  TÖRÖK Attila

	ide/scave: Rename classes: VectorPlotter -> LinePlotter

2020-01-27  TÖRÖK Attila

	ide/scave: IconGridViewer: update item layout and scrollbars when display
	mode changes

2020-01-26  Andras Varga

	ide/scave: IconGridViewer: resolve a small TODO

2020-01-26  Andras Varga

	ide/scave: IconGridViewer: method renaming

2020-01-26  Andras Varga

	ide/scave: IconGridViewer: add SetItemWidthAction

2020-02-17  TÖRÖK Attila

	ide/scave: some rename suggestions

2020-01-24  Andras Varga

	ide/scave: fixes; remove title setting from plot_histograms()

2020-01-24  TÖRÖK Attila

	ide/scave: store last usage timestamp for chart templates, sort by those
	in the context menu

2020-01-24  TÖRÖK Attila

	ide/scave: clear the status text of native charts upon exception

2020-01-24  TÖRÖK Attila

	ide/scave: draw the warning text of mpl plots in a way that's more
	similar to the native charts' warnings

2020-01-24  TÖRÖK Attila

	ide/scave: use the new set_warning instead of raising exception in the 3d
	chart template

2020-01-24  Andras Varga

	ide/scave: getChartName() -> getChartDisplayName()

2020-01-24  Andras Varga

	ide/scave: SaveTempChart: suggest chart name

2020-01-24  Andras Varga

	ide/scave: renamed PropertiesProvider and related stuff to ChartProvider;
	deleted unused getDefaultChartProperties

2020-01-24  Andras Varga

	ide/scave: half-cooked solution: use utils.set_plot_title()

2020-01-24  Andras Varga

	ide/scave: plot: assert chart is native

2020-01-24  Andras Varga

	ide/scave: chart.get_chart_type(),set_suggested_chart_name()

2020-01-23  Andras Varga

	ide/scave: be statisfied with a lower Java version

2020-01-23  Andras Varga

	ide/scave: don't repeat "New" in every context menu item

2020-01-23  Andras Varga

	ide/scave: attempt at making better Edit Properties / Edit Python icons

2020-01-23  TÖRÖK Attila

	ide/scave: tentative: annotate scatterchart templates as accepting scalar
	results, even though they work differently

2020-01-23  TÖRÖK Attila

	ide/scave: TODO for the previous

2020-01-23  TÖRÖK Attila

	ide/scave: Annotate chart templates by the types of results they accept,
	use these to put them in the context menu

2020-01-23  TÖRÖK Attila

	ide/scave: small TODO

2020-01-22  TÖRÖK Attila

	ide/scave: TODO in multipageeditor

2019-05-15  TÖRÖK Attila

	ide/scave: TODOs and Debug prints.

2019-12-16  TÖRÖK Attila

	ide/scave: TODO in ChartEditForm

2020-01-21  TÖRÖK Attila

	ide/scave: small TODO in ChartScriptEditor

2019-11-11  TÖRÖK Attila

	ide/scave: small TODO in FilterGenerator

2020-01-23  TÖRÖK Attila

	ide/scave: internal: plot.py: rename setChartProperty to setProperty

2020-01-23  TÖRÖK Attila

	ide/chart: Add and implement set_warning.

2020-01-23  Andras Varga

	ide/scave: Charts page: add view mode switching icons to the toolbar

2020-01-23  Andras Varga

	ide/scave: IconGridViewer: setViewMode(), setIconsModeItemWidth(),
	setMulticolumnListModeColumnWidth()

2020-01-23  TÖRÖK Attila

	ide/scave: Set the mpl backend using an envvar, so it doesn't even
	attempt to load anything else before we switch

2020-01-23  Andras Varga

	ide/scave: IconGridViewer: factor out default figure width

2020-01-22  Andras Varga

	ide/scave: LabeledIcon: added support for horizontal layout

2020-01-22  TÖRÖK Attila

	ide/scave: fix drawstyle override for native line charts

2020-01-22  TÖRÖK Attila

	ide/scave: extract interpolationmode_to_plot_params into utils

2020-01-22  TÖRÖK Attila

	ide/scave: add drawstyle property to linechart_mpl template

2020-01-22  TÖRÖK Attila

	ide/scave: Add an Advanced tab to all MPL chart templates; two background
	color properties; fix double .label typo

2020-01-21  TÖRÖK Attila

	ide/scave: Add utils.update_matplotlib_rcparams(), add Lines tab to
	linechart_mpl template

2020-01-21  TÖRÖK Attila

	ide/common: Support getting/setting Spinner value as Double in
	XSWTDataBinding.

2020-01-21  TÖRÖK Attila

	ide/scave: fix chart templates and charts regarding:
	chart.set_plot_property -> plot.set_property; separate utils module

2020-01-21  TÖRÖK Attila

	ide/scave: Add a "Lines" tab to the linechart template; rename the line
	styles from sample-hold to steps

2020-01-21  TÖRÖK Attila

	ide/scave: Add the <omnetpp_root>/python dir to the PYTHONPATH of the
	spawned Python Processes.

2020-02-17  TÖRÖK Attila

	ide/scave: misc WIP

2020-01-20  TÖRÖK Attila

	ide/scave: follow through with the module splitting and method renaming

2020-01-20  TÖRÖK Attila

	ide/scave: rename simply to set_properties and get_properties

2020-01-20  TÖRÖK Attila

	ide/scave: split the chart module into chart and plot

2020-01-20  TÖRÖK Attila

	ide/scave: add non-mpl scatter chart template

2020-01-20  TÖRÖK Attila

	ide/scave: fix scatter chart template to use MPL and new API

2020-01-20  TÖRÖK Attila

	ide/scave: new config entry icon for inputs page

2020-01-20  TÖRÖK Attila

	ide/scave: tiny formatting fix

2020-01-20  TÖRÖK Attila

	ide/scave: Make chart name unique when adding to analysis (on pasting, or
	creating a new one)

2020-01-17  TÖRÖK Attila

	ide/scave: remove unused import (six)

2020-01-17  TÖRÖK Attila

	ide/scave: fix [backward-]sample-hold interpolationmodes in plot_vector
	(TODO check if this is the right fix)

2020-01-17  TÖRÖK Attila

	ide/scave: Display config entries on the Inputs page as well (TODO
	recreate screenshot in userguide)

2020-01-16  TÖRÖK Attila

	ide/xswt: Add a workaround to weird String-to-String conversion.

2020-01-16  TÖRÖK Attila

	ide/scave: Add the "Save Chart" action to the context menu of temporary
	charts.

2020-01-08  TÖRÖK Attila

	ide/scave: chart.set_message WIP

2019-12-20  TÖRÖK Attila

	ide/scave: set_message stub...

2019-12-10  TÖRÖK Attila

	ide/scave: Add CopyFilterExpressionAction

2019-12-10  TÖRÖK Attila

	ide/scave: Add SetChartFilterAction.

2019-12-20  TÖRÖK Attila

	ide/scave: TODOS in the python api

2019-12-06  TÖRÖK Attila

	ide/scave: make it possible to plot parameters as well, as barcharts (if
	applicable)

2019-11-08  TÖRÖK Attila

	ide/scave: remove random unused vars

2020-01-17  TÖRÖK Attila

	ide/scave: include the chart name in the "Location" info of the error
	marker

2020-01-17  TÖRÖK Attila

	ide/scave: Fix "Go to error marker" for Python error annotations in Chart
	editors.

	Use the Chart ID as SOURCE_ID attribute instead of index in the analysis.
	So now it works for temporary charts too.

2020-01-02  TÖRÖK Attila

	ide/scave: DataTable: do not try to fill a line whose index was not found

	the -1 was reinterpreted as 2^64-1 and an out of range exception was
	raised by std::vector

2020-02-06  TÖRÖK Attila

	ide/scave: Make sure the SHM names are not longer than 31 characters.
	This was a problem for macOS. Fixes #793.

2020-01-23  TÖRÖK Attila

	ide/scave: Merge two PartListeners, activate the page (tab, ScriptEditor)
	on part (ScaveEditor) activation

	so the console of the part is brought forward, as expected

2020-01-22  TÖRÖK Attila

	ide/scave: Fix double dispose listeners, close tab items by
	middle-clicking

2020-01-20  Rudolf Hornig

	ide: added missing CR at the end of makefile template

	Missing CR at the IDE template caused unnecessary rebuild of the projects
	in IDE as it did not match the opp_makemake template

2020-01-17  Andras Varga

	samples.html: wording fix.

2020-01-17  Andras Varga

	ide: fix NPE where getBuildInfo() returns null; prepare for config modes
	other than "debug" and "release"

2020-01-16  Andras Varga

	ui/Changelog: replaced Scave commit messages with a high-level overview

	This is more useful for end users; the exact commit history is available
	in the public repo.

2020-01-15  Andras Varga

	ChangeLogs: updated, by editing the raw versions. Guidelines:

	- removed duplications (changes released earlier as version 5.5 and 5.6)
	- removed uninteresting changes (e.g. "typo fixed"), and back-and-forth
	changes
	- describe impact of commit to that specific folder (e.g.
	include/omnetpp/ChangeLog
	 should describe the simkernel API changes, not the feature or bugfix
	which caused
	 the API change)
	- tried to make the descriptions more self-contained, i.e. understandable
	 without looking at the actual file changes

----------- lines above this marker have been added from git log -----------

2020-01-02  Attila Torok

	* Analysis Tool redesign, 2nd phase. This is a summary of several hundred
	commits Attila Torok, over the period of 2018-08-01 through 2020-01-02.

	The following is a high-level overview of what was achieved.

	Charts are now produced by running user-editable Python scripts that
	rely on NumPy and Pandas. For charting, there are two options: Matplotlib,
	and the Analysis Tool's own chart widgets. The former is more flexible
	and has more features, but the latter scales better.

	Matplotlib integrates smoothly into the IDE. Charts are live, and even
	animated charts work.

	Scripts are run in separate Python processes that communicate with the IDE
	using Py4J. Result data are loaded by the IDE, and the script can query them
	using an API provide by the Analysis Tool. Data are transferred between the
	IDE and the script using serialization (with the Pickle library), and for
	large amounts of data (vectors), using shared memory for better performance.

	Charts can be configured/parameterized using dialogs. Settings entered into
	the dialog are made accessible to the script, and it can freely use them for
	whatever purpose.

	Charts are created using chart templates. Chart templates include the script
	itself, and the description of the associated dialog. The dialog has
	multiple tabs. The contents of dialog tabs (widgets, layout) are defined in
	XML files (we use the XSWT Eclipse plugin). Many chart templates are
	provided, and the user can also create new ones.

	For editing Python code, the Analysis Tool utilizes the editor provided by
	the PyDev Eclipse plugin. Charts are updated live as the user edits the
	code. (The script is run every time the user stops editing for some time.
	This auto-update can be turned off.)

	Charts and their associated scripts and settings are saved into ANF files,
	whose format has completely changed from version 5.x. An effort is made to
	convert old ANF files to the new format when they are opened, but the result
	usually needs manual editing.

	Charts in an ANF file can be exported from the command-line using a tool
	named opp_charttool. opp_charttool does not rely on the IDE (it is written
	in pure Python), but instead emulates the Analysis Tool's Python API.
	Native charts are emulated using Matplotlib. opp_charttool is useful
	for e.g. exporting chart graphics from automated scripts.

2019-12-19  Rudolf Hornig

	* Update to Eclipse 4.14 and CDT 9.10

2019-11-08  Andras Varga

	* Rudimentary IDE support for new parameter type "object" (syntax highlight).

2019-10-28  Attila Torok

	* Sequence Chart: Add a (potential) axis for any module with a custom
	@class, instead of only those that do not have any submodules. These used to
	be the same, but not anymore in INET, with the new "tricky" compound modules
	that handle some messages themselves. This works around issues #759 and
	#778.

2019-11-14  Attila Torok

	* Install INET 4 (the inet4 project) from FirstStepsDialog.

2019-11-20  Rudolf Hornig

	* Model catalog URL updated

2019-09-30  Rudolf Hornig

	* Updated for Eclipse 4.13.

2019-09-13  Andras Varga

	* Added the new example simulations to the IDE.

2019-09-01  Andras Varga

	* NEDDoc: Automatic hyperlinking of URLs embedded in the text.

2019-08-22  Rudolf Hornig

	* Updated splash / about images for OMNeT++ 6.

2019-08-22  Rudolf Hornig

	* Fix an NPE on closing the Welcome view

2019-08-21  Rudolf Hornig

	* Fix incorrect product ID.

2019-07-31  Andras Varga

	* NEDDoc: Generate "Implementors" table for interfaces. Implementors table
	includes indirect implementors as well.

2019-07-31  Andras Varga

	* NEDDoc: fix: Inheritance diagrams were missing in module interface pages,
	even if they had implementors. This bug made INET documentation much less
	useful.

	Cause: hasBaseType was too restrictive, and its value didn't align with
	what generateInheritanceDiagram() was doing.

	Solution: always generate the dot graph, and check afterwards if it has
	content.

2019-07-24  Rudolf Hornig

	* Use bundled private JRE on all platforms.

2019-07-24  Rudolf Hornig

	* Debug launch config to use lldbmi2 by default on macOS.

2019-07-05  Rudolf Hornig

	* Updated to use Eclipse 4.12, CDT 9.8

2019-06-04  Attila Torok

	* CDT: Remove ancient CProjectChecker class. It often caused a
	DeadlockException on startup, and is no longer relevant.

2019-05-08  Attila Torok

	* Remove dependency on the now defunct AERI (error reporting service).

2019-05-27  Rudolf Hornig

	* Fixed bug report and model descriptor download URLs

2019-04-11  Rudolf Hornig

	* Makefile improvements.

2019-03-28  Rudolf Hornig

	* Use fully offline build with network turned off in the docker
	container

2019-03-27  Rudolf Hornig

	* Eclipse 4.11 update, Tycho 1.3.0 update for building

2019-03-04  Rudolf Hornig

	* Renamed the launcher executable to opp_ide. The same launcher name will be
	used in both OMNeT++ and OMNEST

2019-02-28  Rudolf Hornig

	* NEDDoc: NED documentation now can be generated from commandline

2019-02-13  Rudolf Hornig

	* NEDoc: fix: excluded directories were not working when it was empty

2019-02-18  Rudolf Hornig

	* Fix an NPE when MakefileBuilder was running without a workbench window.

2019-02-14  Rudolf Hornig

	* Fix a crash when shared images was accessed in headless mode

2019-02-22  Rudolf Hornig

	* Updated to Eclipse 4.11, tycho 1.3.

2019-02-11  Andras Varga

	* Sequence Chart: follow rename of ModuleMethodBegin/End to ComponentMethodBegin/End.

	Note: the Sequence Chart tool cannot visualize methods calls from/to
	channel objects, as they have no axes in the chart.

2019-02-11  Rudolf Hornig

	* Added a bookmark file specifying all used update sites.

	The site bookmark file can be imported in the Eclipse / Preferences /
	Install/Update / Available Software Sites dialog. It contains update
	sites for Eclipse Platform, CDT, GEF, PyDev, Linux Tools.

2019-01-24  Rudolf Hornig

	* Fixed dependency file generation

	The dependency file generated by a .msg and the related object file's
	dependency file were overwriting each other.

2019-01-18  Rudolf Hornig

	* Build process refactoring

2018-12-05  Rudolf Hornig

	* Releng: moved to the root directory

2018-10-24  Rudolf Hornig

	* NED documentation generator updated. [This is a summary of several commits.]

	  - Generate material design inspired output.

	  - Navigation tree revised.

	  - It is now possible to specify excluded directories during documentation
	    generation, in order to be able to exclude samples, showcases etc. that
	    are not integral part of the documentation.

	  - Now generates nedtags.xml/msgtags.xml file which is compatible with
	    the doxytags.xml file generated by doxygen. This allows crosslinking to
	    the ned documentation from a sphinx based documentation (using the
	    doxy-link plugin)

	  - Generate usage and inheritance diagrams ONLY if they are meaningful.

	  - Use SVG files as the usage/inheritance diagram image. Removed map
	    files as SVG already contains proper links.

2018-11-26  Andras Varga

	* NED Editor, Sequence Chart: allow SVG export.

	* Makemake dialog: allow setting DLL export symbol from OMNeT++.

2018-08-01  Attila Torok

	* CachingCanvas: Remove a workaround for Eclipse bug #245523 (fixed).
	Affects both the Analysis Tool and Sequence Chart Tool.

2017-06-07  Andras Varga

	* Analysis Tool redesign, 1st phase. This is a summary of several commits by Andras
	Varga, 	over the period of 2017-04-07 through 2017-06-07.

	A partial list of changes:

	- Data model change: added Dataset, Chartsheet and Folder

	- Datasets page replaced by an IconGridViewer that displays chart icons.
	  Charts will be created from scripts instead of tree-edited steps like
	  "add", "apply" and "chart".

	- Remove dependency on Eclipse EMF -- ecore data model was replaced by
	  hand-coded classed, to reduce bloat and for greater control.

	- Editor pages: added a toolbar to the top-right inner corner, use that
	  instead of the main Eclipse toolbar.

	- Inputs page redesigned and rewritten (basically from scratch)

	- Browse Data page: filter strip: remove "Apply" button; "Swap" button moved
	  to left

	- Browse Data page: Tree Levels and Choose Table Columns actions added to
	  toolbar

	- Browse Data page: right-align numeric colums

	- Browse Data page: copy to clipboard action: added icon

	- Browse Data page: added Increase/Decrease Precision actions

	- Browse Data page: data tree was missing icons (used a folder icon)
	  for some item types

	- Browse Data page: adjust preset tree levels: "File" -> "File / Run"

	- Browse Data page: table filter: replace RunId filter with
	  Experiment/Measurement/Replication

	- Exporter improvements: validate dialog on start; enable/disable Export
	  action based on the contents of the selection

	- Charts: default legend positioning changed from "off" to "inside,
	  anchor north"

	- During development, existing Analysis Tool code was preserved for reference,
	  as plugins org.omnetpp.scave_orig and org.omnetpp.scave.model_orig, and
	  later removed.

2018-11-22  Andras Varga

	* Removed unused IDE build scripts. Replaced by releng.

2018-11-22  Andras Varga

	* Remove abandoned Standalone Sequence Chart, due to lack of interest.

2018-11-22  Andras Varga

	* Remove abandoned IDE-based animation plugins.

	This was offline animation, i.e. play-back from the eventlog file
	recorded from the simulation.

	This effort pre-dated the Canvas API, OSG/osgEarth support, smooth
	animation using refreshDisplay(), and Qtenv.

	Originally abandoned due to scalability concerns (eventlog file can be
	huge), but now a huge drawback would be lack of support for recent
	animation APIs used with Qtenv (Canvas, OSG/osgEarth, refreshDisplay()).

2018-11-22  Andras Varga

	* Remove the IDE-based simulation front-end plugin, a shelved project.

	This plugin requires a custom Cmdenv, as it communicates with the
	simulation process that runs in the background via HTTP JSON requests.

	This attempt has pre-dated the Canvas API, OSG/osgEarth and Qtenv.
	Abandoned mainly due to scalability concerns (too much socket
	communication between simulation process and GUI front-end), and more
	recently, due to OSG which would be difficult to integrate into Eclipse.

2018-11-22  Andras Varga

	* Removed the abandoned Standalone Analysis Tool, due to lack of interest.

2018-11-22  Andras Varga

	* Removed abandoned GUI tester and usage tracker plugins, unused for ~10
	years.

2018-07-04  Rudolf Hornig

	* Updated to Eclipse 4.8

2018-06-26  Andras Varga

	* Follow change: Remove references to Tkenv.

2020-01-06  ------ omnetpp-5.6 released ------

2020-01-06  Rudolf Hornig

	* Updated to use Eclipse 4.14 and CDT 9.10.

2019-12-13  Andras Varga

	* IDE: Made the "Project Features" menu item more creative in finding
	the project. (It said "Select a project first" much too often.)

2019-10-07  Attila Torok

	* Analysis Tool: Fix weighted histogram PDF/CDF computation (use sum of
	weights instead of observation count).

2019-10-25  Attila Torok

	* NED editor: added manual connection routing using the "m" tag.

2019-10-30  Attila Torok

	* SequenceChart: Avoid out of bounds error when selecting manual axis
	ordering, or switching between "Manual" and "Minimize crossings" modes.

2019-10-28  Attila Torok

	* EventlogTable, SequenceChart: Strip ANSI escape sequences from log
	message lines.

2019-08-24  Andras Varga

	* NED editor: Fix "Failed to create the part's controls" error due to
	"assertion failed: file is not a NED file, or not parsed yet".

2019-08-06  Andras Varga

	* IDE: Let the user permanently turn off the "OMNeT++ libraries not yet
	compiled" dialog.

2019-05-14  Attila Torok

	* IDE: Remove AERI (now defunct logging service) reference.

2018-11-20  Attila Torok

	* IDE: Avoid NPE when web browser could not be created.

2019-02-11  Andras Varga

	* NED editor: fix recently introduced runtime error during connecting
	nodes.

2018-07-20  Rudolf Hornig

	* IDE: Fix: NedType and Msgtape tags had different value in C++ and Java.

2019-12-06  Rudolf Hornig

	* Updated to use Eclipse 4.13, CDT 9.9.

2019-05-15  ------ omnetpp-5.5 released ------

2019-04-26  Rudolf Hornig

	* fix NPE in workspace import when the initial welcome screen closed
	on the latest eclipse

2019-03-25  Rudolf Hornig

	* Updated tycho/antrunner/pomless plugin versions + fixed version
	number replacements

2019-03-21  Rudolf Hornig

	* Use Eclipse 4.11, CDT 9.7

2019-02-09  Andras Varga

	* ide: removing "bgl" display string tag

	Store seed in the figure instead of the display string tag. Change
	Relayout action accordingly.

	The "bgl" could be used to specify the layout seed for the compound
	module. It has not been supported by Qtenv, as it was unclear how it was
	supposed to coexist with Qtenv's "Relayout" button. We are now removing
	it altogether.

2018-07-06  Rudolf Hornig

	* Fixed the trashy cursors during connection drag and new module
	creation with GTK3. The IDE now runs with GTK3. Both the cursor issue
	and the missing 3-state checkbox issue in the launcher dialog has been fixed.

2018-06-25  ------ omnetpp-5.4.1 released ------

2018-06-13  Andras Varga

	* NED: fix: in a "compound-extends-simple" situation, base was not
	added to the inheritance chain

	simple A {
	   gates:
	       inout g;
	}

	module B extends A {  // <---- despite this, internally B did NOT extend
	A
	}

	module C {
	   submodules:
	       b1: B;
	       b2: B;
	   connections:
	       b1.g <--> b2.g; // ERROR (bogus): gate 'g' not found in 'B'
	}

2018-06-13  Levente Mészáros

	* NED editor: Solved unused deep parameter assignment in NED file
	analysis.

	moduleinterface IMac
	{
	}

	module Mac like IMac
	{
	   parameters:
	       int x;
	}

	module Test
	{
	   parameters: WARN-->     mac.x = 2;
	   submodules:
	       mac: <default("Mac")> like IMac;
	}

2018-06-13  Andras Varga

	* NED: fix: when a compound module extends a simple module, references to
	the base module's gates and parameters were reported as errors ("unknown
	gate", etc.)

2018-06-13  Levente Mészáros

	* NED editor: Solved unused deep parameter assignment in NED file analysis

2018-06-11  ------ omnetpp-5.4 released ------

2018-06-05  Attila Torok

	* Launcher: fix: The IDE sometimes started build in the UI thread,
	locking up the UI for the time of the build, potentially for several
	minutes.

2018-06-05  Attila Torok

	* Fix "unknown" image as module background in the graphical NED	editor.

2018-06-04  Andras Varga

	* Fix: do not report "undefined parameter" for typename assignments in NED

2018-06-01  Andras Varga

	* Fix: inifile analysis: typename deep assignments in NED were ignored

2018-04-11  ------ omnetpp-5.3 released ------

2018-03-08  Rudolf Hornig

	* Fix: added --add-modules vm argument to eclipse.ini to be compatible
	with JDK 9

2017-11-22  Rudolf Hornig

	* Makefile generator: follow opp_makemake change: generate dependency
	files for .msg files too (if they use imports)

2017-11-30  Andras Varga

	* Updated for nedxml library changes

2017-12-08  ------ omnetpp-5.2.1 released ------

2017-12-08  Rudolf Hornig

	* Launcher: fix for program name validation.

2017-09-18  ------ omnetpp-5.2 released ------

2017-09-18  Andras Varga

	* Removed "Add OMNeT++ Support" from the "File" menu

	Reason: it did not add C++ support.

	Replacement: delete the project from the workspace (but leave its
	files!), and create a project over it using the "New OMNeT++ Project"
	wizard. You existing files will appear under the new project.

2017-09-18  Andras Varga

	* Makemake Options dialog: layout fixes

2017-08-25  Andras Varga

	* Launching: no not offer ".qtenv.ini" when creating launch
	configuration

2017-07-16  Andras Varga

	* Analysis Tool: Updated for 'statistic' items and for weighted statistics.

	Background: Specifying "record=stats" in a @statistic NED property, or
	or calling the record() method on a cStddDev object saves a "statistic"
	object in the output scalar file (.sca). A "statistic" object includes
	fields like the count of observations, mean, standard deviation, minimum
	and maximum value. "statistic" objects so far have been blown up to
	several unrelated scalars upon loading into the Analysis Tool, and were
	not available as objects. Now they are loaded as objects, and appear in
	the Histograms and All tabs of the Browse Data page. Statistics fields
	continue to be available as scalars as well, so they can be used as
	chart input.

	Also, weighted statistics (like those saved from cWeightedStddev) were
	not properly displayed in the Analysis Tool. This has been rectified
	as well.

	Details:
	- The Histograms tab on the Browse Data page now includes "statistics"-
	  type results as well.

	- The Histograms tab now has new table columns: "Kind", "SumWeights",
	  "#Bins", "Hist.Range", all displayed by default. "Kind" indicates
	  whether a result item is a "statistic" or a "histogram", and whether
	  it is weighted or unweighted.

	- Individual fields of "statistic" and "histogram" result items are
	  no longer displayed on the Scalars page.

	- Properties for "statistic" and "histogram" result items now includes
	  "Kind" ("weighted"/"unweighted") and "Sum of weights".

	- The "Variance" line has been removed from Properties view because
	  it's not too useful and can be easily computed as the square of the
	  standard deviation.

	- Missing or unavailable data in table cells is now displayed with a
	  hyphen instead of "n.a."

	- On the All tab of Browse Data page, result item fields are now in
	  natural order (i.e. no longer in alphabetically sorted).

	- New icon for scalar items on the All tab of Browse Data page

2017-06-27  Andras Varga

	* Analysis Tool: better display of histogram bins in the Properties view.
	The display format of bins was changed from "a..b" to "[a,b)", in order
	to clearly indicate that "a" is	inclusive and "b" is exclusive.

2017-06-21  Andras Varga

	* Analysis Tool: Export dialog refined

	- Dialog now comes up with correct size (XSWT form fully visible)
	- Better filename generation/validation
	- Disable Finish button when filename field is empty
	- Added 'Open exported file afterwards' checkbox
	- Other refinements

2017-04-06  Andras Varga

	* Analysis Tool: final removal of export code (it was no longer
	accessible from	the GUI since version 5.1.)

2017-04-04  Andras Varga

	* Analysis Tools: changed the syntax for accessing iteration variables
	in filter expressions. Before, they could be accessed like run attributes,
	with the "attr:" prefix. Now, one needs to use the "itervar:" prefix,
	which is more explicit.

2017-03-31  Andras Varga

	* Analysis Tool: Properties view: properly display attributes, iteration
	variables and parameter assignments for runs

2017-03-20  Andras Varga

	* Analysis Tool: Properties view: removed "Number of lines" and
	"Unrecognized lines" entries from the properties of result files

2017-06-23  Rudolf Hornig

	* IDE: updated Eclipse for the final Oxygen release

2017-06-08  Rudolf Hornig

	* Run/Debug Launchers: changes related to "build before launch" and
	recent changes in debug/release builds.

	- The Run, Profile and Debug launch types now automatically trigger build.

	- The launcher now switches the project (and optionally all projects it
	  depends on) to the appropriate build configuration if necessary: Run
	  and Profile will perform RELEASE build, Debug will perform DEBUG build.

	- For Debug launch, the "_dbg" suffix is added implicitly to the target
	  name (both exe and shared lib), and it is expected that the simulation
	  will also load the "_dbg" versions of libraries.

	- A new "Build before launch" section was added to the Launch config
	  dialog, which allows you to control whether to switch build configuration
	  automatically, or ask before the build. The scope of build can also
	  configured; options are: "None", "This project", or "Project + dependencies".

	- If the launch is configured as "Ask before build" (default), a
	  confirmation dialog is shown on launch (and before the build), asking
	  whether to switch the active build configuration to appropriate one.
	  The dialog allows you to set the decision as permanent and reconfigures
	  the launch config accordingly.

2017-05-26  Rudolf Hornig

	* Makefile generator: follow changes in the command-line opp_makemake tool

	- Models are built in RELEASE mode by default. Until now, DEBUG was the
	  default, which resulted in casual users always running their simulations
	  in DEBUG mode, i.e. much slower than possible.

	- RELEASE and DEBUG mode binaries can now co-exist, so users do not have
	  to recompile when they switch modes (e.g. when they want to debug a
	  simulation -- remember, they are built in RELEASE mode by default.)
	  This is a significant gain especially for large models like INET.
	  The goal was achieved by adding the "_dbg" suffix to the names of
	  DEBUG-mode binaries.

	- Binaries are now hard-linked from the build directory (out/) to the
	  target directory instead of being soft-linked. This leaves the copy
	  in the build directory intact when the one in the target directory
	  is deleted.

2017-05-29  Rudolf Hornig

	* IDE: Use statically linked stdc++ library for the IDE native lib for
	better compatibility.

2017-05-12  Rudolf Hornig

	* Simulation Launcher: better progress reporting and cancellation
	for batch runs. Internally, this is the result of switching to the
	new JobGroups API of Eclipse.

2017-05-11  Rudolf Hornig

	* IDE: use Eclipse Oxygen milestone builds (platform version 4.6.2)

2017-05-29  Rudolf Hornig

	* The IDE's native library is now using statically linked c++ standard
	library to avoid binary dependency on libstdc++. This reduces the possibility
	of compatibility issues on older systems.

2017-05-08  ------ omnetpp-5.1.1 released ------

2017-04-29  Rudolf Hornig

	* IDE: Fixed a problem where the IDE was not able to load its native
	library	if it was not started from the MinGW shell.

	* The IDE now properly detects whether it is using MinGW or Clang/C2.

2017-03-31  ------ omnetpp-5.1 released ------

2017-03-10  Andras Varga

	* Analysis Tool: switch to using the new exporters in the scave library
	and new Export dialog.

2017-02-21  Andras Varga

	* Analysis Tool: Old export wizard renamed

2017-03-04  Andras Varga

	* nativelibs: tweak SWIG wrapping to accommodate changes in the scave library

2017-03-16  Andras Varga

	* nativelibs: tweak SWIG wrapping to accommodate changes in the scave library

2017-02-17  Andras Varga

	* Analysis Tool: remove octave and matlab export from the IDE

	Reasons:

	1. poor data representation chosen in the output file, esp. for vector
	   (one time vector, and one value vector per OMNeT++ output vector,
	   where most values were NaN due to the common T vector!
	   2-column matrices for each vector would have been a better choice.)

	2. We don't want to promote Matlab/Octave use for result analysis.
	   Matlab/Octave users should use CSV export.

	Note: octaveexport.cc/h were unused (not in build).

2017-03-10  Andras Varga

	* nativelibs: allow C++11 (compiler flag comes from CXXFLAGS)

2017-02-16  Andras Varga

	* nativelibs: added missing %ignore

2017-03-16  Andras Varga

	* Fix NPE when deleting folder in a non-C++ project

2017-03-13  Rudolf Hornig

	* build: use Eclipse 4.6.3 milestone builds

2017-03-17  Rudolf Hornig

	* NPE and logging fixes

2017-03-09  Rudolf Hornig

	* Makefile generation: follow opp_makemake change: improved the "clean"
	target in the generated makefiles (recursive wildcard; delete only the
	actual target)

2017-03-03  Levente Meszaros

	* Sequence Chart: Eventlog view: selection handling fixes
	   - Temporarily disabled reusing selection (due to NPE) after filtering
	     the eventlog
	   - Fixed dangling focusElement on input change.
	   - Changed selection marks to be more apparent.
	   - Fixed revealing selected element in VirtualTable.

2017-03-03  Levente Meszaros

	* Sequence Chart: Eventlog view: Fixed foreground color when the table
	widget is not focused.

2017-03-02  Andras Varga

	* Inifile Editor: fix #941: Recursively including ini file makes
	OMNeT++ workspace unusable

2017-03-03  Andras Varga

	* Inifile Editor: parser: ParseException is never used, eliminated.
	Also: wrap IOException into CoreException

2017-03-03  Andras Varga

	* Launch dialog fix: debug-on-errors did not take effect for DEBUG
	launch on a fresh launch config. Just opening and closing the Debug
	dialog fixed it (it wrote the setting into the launch config).

2017-03-02  Andras Varga

	* Launch dialog page: fix: config name "Gen" could not be restored.

	"General" was chosen instead, because code used simple startsWith() call
	to test, and "General" came before "Gen" in the list (??).

2017-03-02  Andras Varga

	* Inifile Editor: fix: form edits were lost when typing too quickly
	after hitting Enter. Cause: reread() overwrote user's edits.

2017-03-02  Andras Varga

	* Inifile Editor: Fix #1001: form editor: "Reset to default" button
	pops up "No such entry" error dialog

2017-03-03  Rudolf Hornig

	* Added default Eclipse repositories as update sites

2017-03-02  Rudolf Hornig

	* Added automatic Eclipse reporting support to OMNeT++ (not to OMNEST)

2017-03-02  Rudolf Hornig

	* Removed dummy MSVC toolchain definition

2017-03-03  Levente Meszaros

	* SequenceChart: Changed selection marks to be more apparent.

	* SequenceChart: Fixed revealing selected element in VirtualTable.

	* SequenceChart: Fixed foreground color for EventLogTable when the widget is not
	focused.

2017-03-02  Andras Varga

	* Fix #941: Recursively including ini file makes OMNeT workspace
	unusable

	* Launcher fix: debug-on-errors did not take effect on a fresh launch
	config

	* Launch dialog page: fix: config name "Gen" could not be restored.
	"General" was chosen instead, because code used simple startsWith() call
	to test, and "General" came before "Gen" in the list...

	* Ini editor fix: edits lost when typing too quickly after hitting
	Enter

	* Fix #1001: Ini form editor: "Reset to default" button pops up "No
	such entry" error dialog

2017-03-03  Rudolf Hornig

	* Added default eclipse repositories as update sites

	* Added automatic Eclipse reporting support to OMNeT++ (not to OMNEST)

	* Removed dummy MSVC toolchain definition

2017-02-06  ------ omnetpp-5.1pre3 released ------

2017-02-01  Rudolf Hornig

	* Added CDT repo so plugins can be installed from there directly (It
	was required to add LLDB debugger support as it is not part of the main
	repo.

2017-01-27  Andras Varga

	* "New empty project" wizard: do NOT generate package.ned. Change fixes
	the TicToc tutorial.

2017-01-27  Rudolf Hornig

	* Added lldb support plugins

2017-01-27  Rudolf Hornig

	* Upgraded to Eclipse 4.6.2

2017-01-26  Rudolf Hornig

	* The IDE now generates exactly the same makefile as the opp_makemake
	tool. This allows easier switching between IDE and command line without
	rebuilding the model.

2017-01-16  Andras Varga

	* Fix tri-state checkboxes. Affects launch dialog and Analysis tool chart
	properties dialog.

2017-01-11  Rudolf Hornig

	* neddoc: made the doxy file path relative to the project. This fixes the
	issue in windows.

2016-11-21  Levente Meszaros

	* Debug launch: GDB init file changed from python2 to python3 syntax

2016-12-23  ------ omnetpp-5.1pre2 released ------

2016-12-19  Andras Varga

	* IDE: Inifile editor updated with new/changed options

2016-12-16  Rudolf Hornig

	* IDE: updated logo images

2016-11-25  Andras Varga

	* Analysis tool: initial support for SQLite-based result files [Zoltan
	Bojthe, Rudolf Hornig, Andras Varga]

2016-12-05  Rudolf Hornig

	* Build: renamed default config names from gcc-debug -> debug.

2016-12-01  Rudolf Hornig

	* Build: removed Visual C++ specific code, as now we support the
	Visual C++ compiler with the normal makefiles and build mechanism.

2016-11-18  Andras Varga

	* Inifile editor, Launcher: support for cmdenv-stop-batch-on-error

2016-11-11  Andras Varga

	* Launch page: "Silent" checkbox replaced by "Verbose"

2016-11-14  Andras Varga

	* Launch page: more/better tooltips

2016-11-18  Andras Varga

	* Launcher: don't force --debug-on-errors=false in RUN mode. Reason:
	user may want to launch simulation using RUN, and use an external
	debugger to debug it.

2016-11-14  Andras Varga

	* Launch page: "Debug on errors" made tri-state checkbox

2016-11-14  Andras Varga

	* Launcher: added hint for the run filter

2016-11-14  Andras Varga

	* IDE: omnetpp-ide.launch updated

2016-11-16  Andras Varga

	* Project Features: detecting external changes in the generated header file
	made more robust: made comparison insensitive to comment, whitespace and
	order differences.

2016-11-16  Andras Varga

	* Project Features property page: fix: could not properly fix NED
	exclusions list

	The old NED exclusions list always came back after "fixing" the project
	configuration from the Project Features property page. (.nedexclusions
	with updated content was saved to disk, then on "Apply" it was
	overwritten with old content.)

2016-10-27  Andras Varga

	* Launcher improvements

	- tolerate lack of console (no NPE in stream monitor)
	- on simulation error, display concrete message in the error dialog,
	  not just "Finished with error"
	- code structuring for readability

2016-10-27  Andras Varga

	* Launch page: UI revamp

	- use tristate checkboxes instead of Yes/No/Default radio buttons or combos
	- UI: use editable combo instead
	- working dir merged into Simulation group
	- Qtenv to precede Tkenv
	- Batch settings into separate group
	- introduced explicit "useBatching" checkbox
	- debug-on-errors: replace combo with checkbox that appears only in DEBUG
	  mode (and fixed "false" in RUN mode)
	- use our own SWTFactory
	- added simulation time limit / CPU time limit
	- added content assist for Additional Arguments
	- hook modificatoin listeners automatically
	- etc.

2016-10-07  Andras Varga

	* Launcher: allow simulations execute in batches

	OmnetppMainTab: added "Batch size" spinner, etc.

	Added JobGroup-based alternative implementation code as comment (it
	currently does not work, because progress reporting from job groups is
	broken, see Eclipse bugtracker)

2016-10-20  Rudolf Hornig

	* IDE: set all plugin's minimum runtime requirement to JRE 1.8

2016-10-20  Rudolf Hornig

	* IDE: Updated to eclipse 4.6.1

2016-10-19  Andras Varga

	* Fix NPE on startup when open ANF file was deleted since last session

2016-10-19  Andras Varga

	* Analysis tool: display Experiment/Measurement/Replication columns in
	Browse Data tables instead of Folder/Filename/RunId/Config/RunNumber.

	Note that this is only the default values for a preference, so change
	will only take effect in new installations (or delete delete scave
	preferences from .metadata/org.eclipse.core.runtime/...)

	Also: increase default columns widths

2016-10-19  Andras Varga

	* Analysis tool: updated generation of default anf file names from
	vec/sca file names

2016-10-12  Andras Varga

	* Launcher: make simulation batch cancellable; getting run list was
	broken by a recent commit

2016-10-12  Levente Meszaros

	* Fixed incorrect tooltip background/foreground colors.

	Added colorLock flag to prevent the eclipse styling mechanism from
	overriding colors already set on the widget. Added kludge to workaround
	the fact that the HTML parser returns black colors for
	foreground/background even when they were not specified. Removed colors
	from HTML prolog to fallback to system defaults.

2016-10-10  Andras Varga

	* Analysis tool: dark scheme fix

2016-10-10  Andras Varga

	* NED editor: improvement for dark color schemes (removed grey strip
	from "package" heading)

2016-10-10  Andras Varga

	* Inifile edtor: icons: better transparency (for dark color schemes)

2016-10-10  Andras Varga

	* Inifile form editor: improvements for the dark color scheme

2016-10-10  Andras Varga

	* Inifile editor: fix "widget already disposed" error

2016-10-05  Levente Meszaros

	* Fixed incorrect swig mapping for ptr_t/uintptr_t.

2016-11-30  Rudolf Hornig

	* Removed 'nmake' support from the IDE. The Microsoft Clang/C2 compiler
	now works with the same configuration as the MinGW compiler.

	* Added support for 64-bit builds with both the MinGW-W64 and the Clang/C2
	compilers.

2016-08-04  Rudolf Hornig

	* While detecting the omnetpp_root directory, check all parent
	directories for Makefile.inc

2016-08-03  Rudolf Hornig

	* build: removed 32-bit linux support for the IDE

2016-07-20  Rudolf Hornig

	* build: The native IDE build script now creates Windows 64, Linux 64 and
	macOS shared libraries.

2016-05-23  Rudolf Hornig

	* The IDE build system is now using Eclipse 4.6 and Maven/Tycho

2016-05-27  Rudolf Hornig

	* Removed deprecated construct + handled IllegalArgumentException when
	invalid path is entered in the IMAGE_PATH

2016-07-08  Andras Varga

	* Project Features: features.h banner change, and more fixes

	- fix NPE when opening Project Features dialog for a project with no
	  features defined
	- String getDefinesFileName() -> IFile getDefinesFile()

2016-07-05  Andras Varga

	* test/* added IDE test projects for testing the linker/compiler
	options, include path etc. [Rudi]

	Exercises the following IDE build features:
	- multiple projects
	- multiple makemake folders per project
	- target types: static lib, shared lib, executable
	- linked project (i.e. not directly under the workspace dir)
	- project references, >2 deep
	- project features (.oppfeatures)
	- include folders: defined in CDT (Paths&Symbols page), by project
	  features, and in makemake -I options
	- defines: defined ibn CDT (Paths&Symbols page), by project features, and
	  in makemame -D options
	- message files, used in referenced projects

	Pass criteria:
	- project must compile, resulting executable must start
	- content of generated makefiles is checked against a saved copy

2016-07-05  Andras Varga

	* ProjectFeaturesManager: warn for missing definesFile attribute

2016-07-01  Andras Varga

	* ProjectFeaturesManager: offer removing "WITH_TCP" etc macros from
	CDT configuration. Now they come from header file, and only cause
	confusion.

2016-07-01  Andras Varga

	* Added BuildSpecFolderRenameDetector, MsgFileRemoveDetector

	They:
	- remove _m.cc/h files when their msg is deleted
	- make .oppbuildspec files follow folder renames

2016-07-04  Andras Varga

	* MetaMakemake: convert paths to relative for makemake

2016-07-04  Andras Varga

	* MetaMakemake: collect include path recursively; linker settings:
	only use directly referenced projects

2016-07-01  Andras Varga

	* MetaMakemake: renames; add -L for referenced projects even if we
	dont automatically link with their libs

2016-07-01  Andras Varga

	* MetaMakemake: better values for the FOO_PROJ=... variables

2016-07-05  Andras Varga

	* MetaMakemake: fix include path exported from referenced projects

2016-06-29  Andras Varga

	* MetaMakemake: refactor: split up addFeatureCFlagsTo() /
	addFeatureLDFlagsTo()

2016-07-01  Andras Varga

	* MakemakeOptionsPanel: remember manually added -L options

2016-07-05  Andras Varga

	* MakemakeOptionsPanel: Compile tab: put some options under a More>>>
	link

2016-07-05  Andras Varga

	* MakemakeOptionsPanel: disable useFeatureLDFlagsCheckbox if not
	applicable

2016-07-01  Andras Varga

	* MakemakeOptionsPanel: don't lose manually entered options in the
	Preview pane

2016-06-30  Andras Varga

	* MakemakeOptionsPanel: added note, wrap label

2016-07-05  Andras Varga

	* MakemakeOptionsPanel: added checkboxes for metaFeatureCFlags and
	metaFeatureLDFlags

2016-06-30  Andras Varga

	* MakemakeOptionsPanel: make MakemakeOptionsDialog resizable

2016-06-29  Andras Varga

	* MakemakeOptionsPanel: added Include directories listbox to the
	Compile page

2016-06-30  Andras Varga

	* MakemakeOptions: added "." as default include dir

2016-06-29  Andras Varga

	* MakemakeOptions: change order of generated options

2016-06-29  Rudolf Hornig

	* Build: for gmake builds removed the CONFIGNAME from the invokation
	command line.

	Make will use the automatically detected toolchain name (detected by
	./configure). In practice this means that once a project is built from
	the IDE, issuing a make command from the command line will not rebuild it
	from scratch.

2016-06-29  Andras Varga

	* Project Features property page: validate the saved project state,
	not the edited one

2016-07-05  Andras Varga

	* Project Features property page: removed "Export build tester
	makefile" feature. We now have an opp_featuretool-based shell script
	for the same purpose.

2016-06-28  Andras Varga

	* Project Features: handle defines with generated header file instead
	of macros in the CDT project configuration. Needs definesFile="..."
	in the root element of .oppfeatures

	* ProjectFeaturesPropertyPage: display name of generated header file

2016-06-28  Andras Varga

	* Metamakemake: use absolute paths for -L, it will be converted
	to relative inside the Makemake class later (in a better way than
	makeRelativePath() can)

2016-06-28  Andras Varga

	* Added metaExportIncludePath, metaUseExportedIncludePaths

2016-07-05  Andras Varga

	* Removed deep-includes option from the IDE and opp_makemake

	As it turned out, it was not all that useful (too error-prone
	for large projects like INET where it was originally targeted)

2016-06-24  Andras Varga

	* IncludeFoldersCache: cache deep-include folders ONLY (based on
	makemake options)

	Don't add non-deepinclude makemake folders to the include path -- if
	that's needed, it should be done explicitly in the Paths&Symbols page.

2016-06-24  Andras Varga

	* Makemake: removed Autoinclude option -- always use include folders
	from the Path&Symbols page

	It was convenient but a messy, for example the -I options in the generate
	Makefiles did not match with the contents of the Paths&Symbols page.

	Better make everything explicit -- and more predictable.

2016-06-24  Andras Varga

	* IncludeFoldersCache changes:
	1. fix: skip non-omnetpp projects
	2. rewrite to discover and maintain list of include folders, base on makemake options

2016-06-28  Andras Varga

	* Removed dependency cache from the IDE.

	Remaining issue: MetaMakemake used to take automatic include folders from
	DependencyCache, this no longer works

2016-06-24  Andras Varga

	* Fix: don't save makemake options for non-makemake folders

2016-06-28  Andras Varga

	* Fix long-standing MetaMakemake bug

2016-06-23  Rudolf Hornig

	* Makefile now uses compiler-generated dependency files.

2016-04-13  ------ omnetpp-5.0 released ------

2016-03-10  ------ omnetpp-5.0rc released ------

2015-12-07  ------ omnetpp-5.0b3 released ------

2015-07-20  ------ omnetpp-5.0b2 released ------

2015-03-04  ------ omnetpp-5.0b1 released ------

2014-11-27  ------ omnetpp-4.6 released ------

2014-06-30  ------ omnetpp-4.5 released ------

2014-02-13  ------ omnetpp-4.4.1 released ------

2013-12-20  ------ omnetpp-4.4 released ------

2013-10-15  Rudolf Hornig

	Fixed the launcher not to throw error if the toolchain is clang.

2013-10-14  Rudolf Hornig

	Now using Eclipse 4.3.1 as base for the IDE

2013-09-13  Tamas Borbely

	Implemented project specific image searches. The "image" folder of the
	project and its dependency projects are added to the image path. New image
	path is automatically used by the NED editor and other places where module
	are displayed. (Folder name is hardcoded now; this will be configurable
	in future releases).

	Additional changes:
	- Launch dialog contains a field to specify the --tkenv-image-path option;
	  by default its value is populated with the image path of the project
	  containing the working directory.
	- Added ${opp_image_path:dir} variable substitution.
	- Caches are invalidated if OMNETPP_IMAGE_PATH, the project dependencies, or
	  the image directories or files have changed.

	Also: NED palette scales images to 16x16 and 24x24. Previously the aspect
	ratio was kept.

2013-10-01  Andras Varga

	Scave: name of 'substract' filter changed to 'subtract' (typo)

2013-09-30  Levente Meszaros

	Sequence Chart: Fixed error handling when the error occurs in paint during
	startup.

2013-09-12  ------ omnetpp-4.3.1 released ------

2013-09-12  Levente Meszaros, Andras Varga

	When the IDE is started with an empty workspace (e.g. on first-time
	launch), a dialog comes up automatically that offers the user the
	following options for getting something into the workspace:

	- Import the OMNeT++ sample simulations into the workspace
	- Download and install INET Framework

	The latter function is also available now via the Help > Install
	Simulation Models... menu item. The menu item brings up a dialog
	with the list of simulation models available for automated installation,
	and lets the user choose. Currently only the INET Framework is
	listed there, but it is planned to add further models.

2013-09-12  Levente Meszaros, Andras Varga

	When the IDE was started for the first time, the user formerly saw an
	empty workbench window (apart from the imported samples). Now some
	helpful introductory pages are displayed in the editor area:

	- "Getting Started" - practical advice for getting past the first
	  10 minutes spent in the IDE

	- "At a Glance" - explains the common file types (NED, msg, ini) and
	  their purposes

	- "The Simulation Examples" - explains each example simulation in two
	  sentences, then provides links for opening the project, viewing the
	  README, launching the simulation, etc.

	These pages are also available in the Help system (except the last one,
	which has a dedicated menu item under the Help menu.)

2013-09-06  Andras Varga

	Run dialog > OMNeT++ Simulation > Launch tab: bug fixes:
	- pasting "a}" into the Working dir field caused weird behavior
	- pasting ${ into workingDir caused error dialog

2013-08-28  Andras Varga

	IDE: import sample projects even if workspace is different from omnetpp/samples

2013-06-06  Levente Meszaros

	Changed default appearance of the main welcome page to be more user friendly.

2013-09-03  Andras Varga

	IDE: trying to launch a closed project will now offer opening it

2013-08-26  Levente Meszaros

	Neddoc: fixed bug 672: Added escaping for replacement string.

2013-08-07  Tamas Borbély

	Output Vector View: show 'Goto ...' actions in the context menu
	(instead of the view's pulldown menu)

2013-08-07  Tamas Borbély

	Analysis Tool: fix #389 (Useless items in the Statistic Name filter)

	The filter hints of combos is now computed from the result items filtered
	by the other 2 combos.

2013-08-06  Tamas Borbély

	Analysis Tool: fix #388 (add '*.host[*].*' variant to module filter hints)

2013-08-09  Rudolf Hornig

	command line: fix for #670 -vmargs conflict between omnetpp.ini and
	the launcher script.

2013-04-02  ------ omnetpp-4.3 released ------

2013-03-17  Rudolf Hornig

	The debugger no longer stops at the main() symbol by default.

	Updated the IDE to Eclipse 3.8.2

2013-02-08  ------ omnetpp-4.3rc1 released ------

2012-12-17  Rudolf Hornig

	Debugging: the default gdbinit file is now ${opp_root}/misc/gdb/gdbinit.py
	when a new launch configuration is created.

	Also added support for project-specific gdbinit files: the .gdbinit.py
	script in the project root is now automatically sourced by the default
	init script. Project-specific gdbinit files can be used to initialize
	pretty printers specific to the project.

2011-11-15  Rudolf Hornig

	Launcher: for the running program, the configuration name is now
	correctly displayed in the Console view.

2012-12-11  Rudolf Hornig

	Debugging: switched over to the newer DSF debugger framework of CDT.

2012-11-30  Rudolf Hornig, Andras Varga

	IDE: Added support for opening files from the command line, i.e. the command

	  $ omnetpp Aloha.ned Aloha.cc

	will work as expected (opens these files on startup). If necessary,
	the IDE will open the containing projects if they are closed, and will
	even offer creating/importing a project if the files are outside all
	workspace projects.

2012-11-21  Levente Meszaros

	EventLog, Sequence Chart: better error reporting

2012-11-13  Rudolf Hornig

	CDT: disabled Code Analysis by default. It displayed tons of bogus
	"Semantic Errors" that totally confused novice users.

2012-11-06  Rudolf Hornig

	Command line: the build output is now less verbose (for gcc/mingw).
	Only the file names are printed when building, not whole command lines.

2012-10-24  Rudolf Hornig

	Productizing: updated to Eclipse 3.8.1, removed our own linuxtools
	feature, changed to Cocoa framework from Carbon on OS X, moved to Java
	1.6 as a minimum requirement.

2012-10-16  Levente Meszaros

	Common: avoid showing a hover while any mouse button is pressed

2012-10-15  Tamas Borbely

	Scave: BaseLineChartEditForm: no loss of settings when clicking on lines
	without pressing Apply first

	The content of the controls are saved temporarily as properties of the
	selected lines.

2012-10-15  Tamas Borbely

	Scave: fix #604: display names were reset after setting another line
	property in the Properties dialog

2012-10-10  Tamas Borbely

	Scave: use set display names on legend of scatter charts

2012-10-07  Andras Varga

	IDE: registered "Small font" (appears in the Preferences dialog)

2012-10-11  Andras Varga

	Scave: remember last open tab of Chart Properties dialog

2012-10-13  Andras Varga

	Launcher: fix NPE

2012-08-29  Andras Varga

	Launcher: dialog: fix NPE when processing an omnetpp.ini without section header
	Launcher: dialog main page: cosmetics on labels

2012-10-09  Levente Meszaros, Andras Varga

	IDE: use StyledText instead of Browser for HTML hover information

	Motivation: The Browser widget is not always available on all platforms
	(constant xulrunner problems on Linux, etc).

2012-10-09  Levente Meszaros

	IDE: added Full Screen menu item, bound to Ctrl+Shift+F11

2012-07-17  Tamas Borbely

	Scave: major feature: implementation of computed scalars

2012-07-09  Tamas Borbely

	Scave: fix #754: user defined chart area (minX/maxX/minY/maxY) can now
	be larger than the plot area computed from the data

2012-07-09  Tamas Borbely

	Scave: fix #573/2: added hot keys for switching between the Vectors,
	Scalars, Histograms, All pages in the Browse Data page

	For switching between Inputs/Browse Data/Dataset pages, Alt+PgUp/PgDown
	can be used.

2012-07-09  Tamas Borbely

	Scave: fix #573: do not switch to VectorBrowser/Dataset view on page
	changes in the Browse Data page

2012-06-27  Tamas Borbely

	Scave: add 'logarithmic X axis' option to scatter chart (bug #573)

2012-10-03  Rudolf Hornig

	SeqChart: better error messages for the Goto Simulation Time dialog

2012-03-28  Andras Varga

	IDE: launcher: fix ".cc file cannot be launched" bug. Now we interpret
	it that as if the file's parent folder was selected.

2012-01-15  Andras Varga

	IDE: added named connections support to:
	- Property View
	- Properties Dialog in graphical mode
	- content assist in NED editor

	TODO: inifile editor

2012-03-26  Andras Varga

	IDE: fix: change remaining KB/MB to KiB/MiB

2012-03-13  Rudolf Hornig

	Scave: removed export support for Matlab script output.
	The generated script was syntactically incorrect, plus Matlab uses only
	the first 63 chars as identifiers, and this causes collisions between names.

	CSV should be used as data export for Matlab.

2012-03-12  Rudolf Hornig

	CDT: fix #532: Makemake and Project Features pages are now displayed
	only if the project is both OMNeT++ and CDT project

2012-03-13  ------ omnetpp-4.2.2 released ------

2012-01-17  ------ omnetpp-4.2.1 released ------

2011-10-28  ------ omnetpp-4.2 released ------

2011-09-11  ------ omnetpp-4.2rc1 released ------

2011-05-27 Rudolf Hornig

	* Before running a simulation, the IDE will show the command line in
	 the console view to help you execute the same simulation from the
	 command line.

	* CTRL-TAB now works on freshly opened NED files even if you do not explicitly
	 select a simple module. In this case the IDE opens the .h and .cc files
	 associated with the first simple module in the NED file.

2011-05-05  ------ omnetpp-4.2b2 released ------

2011-05-03 Levente Meszaros

	* Animator preview: Updated animator plugin. Heavy changes since last version.

2011-05-03 Andras Varga

	* Fixes #289: Problem with syntax highlight of xml tags in NED comments

2011-04-30 Andras Varga

	* Added "Export BuildTester makefile" to the project properties dialog
	to help testing projects that define several "Project Features" (i.e.
	INET-Framework)

2011-04-21 Andras Varga

	* Ini editor: rearranged tree and default page on the form editor.

	* Fixed #282, #283. Source/sink example generated by the new project
	wizard was incorrect.

2011-04-20 Tamas Borbely

	* Ini file editor performance enhancements.

	* Ini editor: a new INI edior opens with the same page (text/form) that
	was used last time

2011-04-14 Andras Varga

	* Makefile Wizard Template fixes
	* Added support for the new xml() NED function

2011-04-08 Andras Varga

	* Implemented conditional submodule support (including content assist)

2011-04-02 Andras Varga

	* NED Editor: Supporting default values for parametric module and channel types.
	* Added support for excluding NED packages
	* Implemented "Project Features" feature.

2011-04-01 Levente Meszaros

	* EventLog and Tkenv: several fixes to support the new animation component.
	* EventLogView: changed some wording, addes additional fields to be displayed in the table

2011-03-31 Andras Varga

	* Fixes on Project Property Makamake page. Apply button now works correctly.

2011-03-29 Tamas Borbely

	* Analysis tool: when double-clicking on an item on the InputsPage, filter will be set to 'All'

2011-03-28 Levente Meszaros

	* NED Editor: Double-click now opens the NED type instead of the Properties dialog.

2011-03-24 Levente Meszaros

	* SequenceChart filter dialog enhancements

2011-03-17 Levente Meszaros

	* Layouter in IDE and in Tkenv now produces the same result.

2011-03-04 Tamas Borbely

	* Ini file lines now contain links also to modules, not just to the parameters
	* Copy action added to the Module Parameters View

2011-03-04 Rudolf Hornig

	* IDE Updated to Eclipse 3.6.2

2011-03-04 Levente Meszaros

	* EventLog format changes for animation support.

2011-02-23  ------ omnetpp-4.2b1 released ------

2011-02-05 Andras Varga

	* Several performance optimizations for the NED Editor. It must be able to
	open networks containing around 10.000 submodules.

	* Performance: NED validation is done now in a background thread

2011-02-03 Rudolf Hornig

	* Graphical editor: Figure borders and outlines now correctly follow the zoom level.

	* Graphical editor: The resize/move feedback figures have been changed to
	transparent blue from a simple outline.

2011-02-03 Levente Meszaros

	* Added Technology Preview version of the network animator. It works only
	on .elog files smaller than 10Mb. You can open it by right clicking on an
	.elog file and selection "Open with...". This implementation is NOT optimized
	for larger files.

2011-02-01 Rudolf Hornig

	* NED Files are refreshed now before opening. No more "file is out of sync"
	message if the opened NED file was modified outside of the IDE.

2011-02-01 Andras Varga

	* Simulation launcher: Size of the popup information tooltip is limited
	when displaying all the runs (i.e. whan the parameter space is too big)

2011-01-31 Levente Meszaros

	* Added the possibility to go to a specific simulation time in event log
	view by specifying relative values (+-) in the dialog (units are supported)

	* In sequence chart added 'Goto simulation time' and 'Goto event number'
	in the context menu

	* Sequence chart: the current position is shown in the gutter

	* Completion proposals in inner types after @ are working properly in NED text editor

2011-01-28 Andras Varga

	* NED type selection dialog now optionally shows the defining projects for the types.

2011-01-24 Rudolf Hornig

	* Context menu in graphical editor is reorganized for better and easier access of the
	 most used functions.

	* Linux tools now included in the build. It allows to profile the simulation
	using Valgrind on Linux systems. (Windows and Mac builds does not have
	this capability). Use the "Profile as" menu item in the context menu of
	the project directory.

2011-01-21 Rudolf Hornig

	* Go to C++ definiton (CTRL-TAB) now correctly finds the appropriate C++ class even if the
	NED type is extending another type or it is using the @class property. (bug #238)

2011-01-20 Rudolf Hornig

	* In graphical editor the previous action used with double click (go to
	type or supertype) has ben moved to the F3 key. It is also available
	from the context menu.

2011-01-20 Andras Varga

	* Added a brand new Property dialog that can be accessed by double clicking
	on the module or type. Type, name, vector size and graphical properties
	are supported. A preview is shown at the bottom	of the dialog.

	* Enhanced Ned Type Selection dialog (CTRL-SHIFT-N)

2011-01-18 Rudolf Hornig

	* The package name for the ned file is shown at the top in the graphical editor

	* Support for displaying self-connections in the graphical editor as
	an arch in the upper right corner

2011-01-13 Rudolf Hornig

	* Connections in graphical editor now have an error marker to show possible problems.

	* Validator used for entering type names (in the Property View) now correctly
	supports inner types and packages

2011-01-07 Rudolf Hornig

	* NED Editor now supports drag-and-drop operations of inner types (moving
	an inner type to top level, or the other way around). Types dropped inside
	the submodule area create a submodule with that type. Types dropped on the
	title area of the compound module create an inner type.

2011-01-06 Andras Varga

	* Unit name now can be set in property editor for compound modules

2011-01-04 Andras Varga

	* Compound module border now can be set to 0 width

2011-01-04 Rudolf Hornig

	* In the graphical editor, inner types can now be created by dropping
	a NED type on the title of the compound module

2011-01-03 Rudolf Hornig

	* The simulation process is now started by using relative paths. The
	command line displayed in the console when the process start has
	failed is much more readable now.

2010-12-22 Rudolf Hornig

	* Property cell editors for type, liketype, extends properties on simple
	modules, compound modules, channels, submodules and connections are now
	displaying all the possible types correctly. Cells contents are validated
	so nonexistent types cannot be used.

2010-12-17 Rudolf Hornig

	* Fixed #230. The values for Type, Like and Extends property on a
	submodule/connections/or NED type (top-level or inner) are initialized
	correctly. They contain correct values according to the current lookup context.

	* Cloning or creating new inner types using the graphical editor now
	generates unique names correctly

2010-12-16 Rudolf Hornig

	* Changed the palette entry ordering in NED editor to include inner types
	in the current file on the top.

2010-12-15 Rudolf Hornig

	* Fixed #229. In NED Editor: Inherited display property values can be
	leared now using "-" as a value. It is possible now to remove an icon
	even if the ancestor specified one.

2010-12-14 Rudolf Hornig

	* Fixed the tooltip of the "Display property" in the properties view. No longer displays null[0]

2010-12-13 Rudolf Hornig

	* Fixed bug#224. NPEs when cloning submodules with connections which are defined in an ancestor module.
	* Fixed bug#227. NPE on upinning a submodule

2010-12-11 Rudolf Hornig

	* Added plugin customization to force workspace refresh on IDE startup.

2010-12-11 Rudolf Hornig

	* Fixed bug#213. NPE occurred in NedEditorLauncher if the filesystem and the
	workspace got out of sync.

2010-12-11 Andras Varga

	* IDE: fix of bug #145: Open NED Type dialog comes up empty on first invocation
	NedTypeSelectionDialog now contains a INedChangeListener, and any NED
	change triggers a delayed update of the displayed list.

	* IDE: fix for bug #223: bogus "X seems to be a hand-written makefile" message
	when the makefile was deleted from the disk behind the IDE's back

2010-12-10 Rudolf Hornig

	* Changed the default OMNeT++ source code formatter profile to match the
	current INET coding convention. Profile is using only spaces instead of
	tabs for indentation.

2010-12-10 Andras Varga

	* IDE: fix for bug #222: Chinese comments become gibberish in NED files.
	Solution: wherever possible, save files in the file's own encoding
	(i.e. charset), using content.getBytes(ifile.getCharset()).

2010-12-06 Rudolf Hornig

	* IDE: Added a "Clean Selected Projects" menuitem to the project explorer context menu.
	This item DOES NOT clean referred projects.

2010-11-10 Rudolf Hornig

	* Support for Profiling (in addition to Debug and Run modes). (enable to use linuxtools with valgrind)

2010-10-19 Rudolf Hornig

	* MachO64 parser support added for new CDT projects. Updated error parsers provided by CDT 7.x.

2010-09-30 Rudolf Hornig

	* Updated the base system to Eclipse 3.6.1

2010-09-22 Andras Varga

	* IDE: fixed resolution of parametric submodule types in NedTreeTraversal

	* IDE: refined the resolution of parametric submodule types
	The actual type needs to be resolved in the project of the inifile,
	not in the project of the compound module that contains the submodule
	(for example, udpApp's type need not be in StandardHost's project INET,
	it may also come from a project that has INET as dependency)

2010-07-13 Tamas Borbely

	* Scave: Line type on vector chart did get reflected in the Chart Properties
	dialog (issue 182). When the line property has the same value for each
	selected line in the Properties dialog, then that value is displayed in
	the control, instead of 'No change'.

	* Scave: Empty chart if refreshing a temp chart after re-running simulation
	(issue 186). When creating a temp chart, runs was identified by runname,
	now they are identified by file/configname/runnumber.  'Add Selected Data
	to Dataset' and 'Convert to Dataset' actions also use the file/configname/
	runnumber fields for consistency.

2010-07-19 Levente Meszaros

	* SeqChart: Fixed a NPE.

	* SeqChart: fix handling show/hide [self] message reuses toggle buttons
	There was some confusion between those buttons, now they toggle showing/hidign
	only for those arrows that they represent.

	* SeqChart: fix message reuse arrows when affected by a module method call
	The end point for a message reuse was wrong. It used the event's module of
	the begin send entry instead of the context module to determine the Y coordinate.

2010-07-13 Tamas Borbely

	* fix issue 180: fixed assert when double coordinate is +-Infinite

	* fix issue 196: use file/configname/runnumber to identify runs of temp chart data

2010-07-13 Tamas Borbely

	* BaseLineChartEditForm: fix issue 182
	When the line property has the same value for each selected line,
	then that value is displayed in the control instead of 'No change'.

2010-07-12 Tamas Borbely

	* small layout fix in BaseLineChartEditForm

2010-07-08 Andras Varga

	* Scave: fix focus problems (bug #188) by using the new FocusManager class

2010-07-07 Andras Varga

	* Scave: drawing timeouts come now from preferences

	* Scave: time limit facility for line chart plotting

	* Scave: removed smartMode in LinePlot as it was responsible for bug #181
	Turning off symbols for DOTS line type resulted in empty chart.
	http://dev.omnetpp.org/bugs/view.php?id=181

	* SeqChart: axis ordering dialog layout improved: buttons move to the right

	* SeqChart: fix: "Show self-messages" button (blue arched arrow) also toggled
	self-reuse (green) arrows on the chart

2010-06-23 Levente Meszaros

	* Sequence Chart: Fix for find text bug. Find text did not work in filtered eventlogs.

	* Cleanup the show/hide flags related to message send/reuse arrows.
	A couple of renames and minor tweaks, namely arrows are categorized along
	two axes: reuse/send, self/other.

2010-06-22 Andras Varga

	* Scave: fix unreadable (black-on-black) filter combo dropdown on ubuntu 10.04
	in Ubuntu 10.04: in the default theme, combo editfield is black-on-white
	and dropdown list is white-on-black, so calling setForeground() on the combo
	will inevitably make one of them unreadable. Workaround: do NOT call
	getForeground().

2010-06-11  ------ omnetpp-4.1 released ------

2010-05-31  ------ omnetpp-4.1rc2 released ------

2010-04-20  ------ omnetpp-4.1b4 released ------

2010-03-14  ------ omnetpp-4.1b3 released ------

2009-08-03  Levente Meszaros

	* Connection chooser brings up channel chooser when using the default
	connection tool and there are matching labels between the connected
	gates and an available channel type.

	* Palette shows NED types in two distinct groups: the first contains
	those which are related to the current editor ordered by score, the
	second contains all available types ordered by name

2009-07-17  Levente Meszaros

	* Text editor provides new context menu items to infer/distribute gate labels.

2009-07-15  Levente Meszaros

	* Palette provides regexp based substring filtering for qualified NED
	type names and @label properties.

	* Palette sorts submodules based on what is actually already used, what
	could be connected and @contains properties.

2009-07-14  Levente Meszaros

	* Added support for matching @labels properties of gates in the connection
	chooser popup menu.

2009-07-13  Levente Meszaros

	* Added validation to parameters dialog, reserved NED words cannot be
	parameter names, and parameter values must be valid expressions.

2009-06-09  Levente Meszaros

	* SEQCHART: Added sequence chart support to display module method calls
	as vertical orange arrows. The arrow's label is the method's name,
	tooltips are also available.

	* Some message send arrows were drawn incorrectly from the caller module
	due to not taking into consideration module method calls. From now on
	these kind of arrows might start from any point on a module's axis,
	even if there was no event at that simulation time in the callee module.

	* Store various show/hide flags in sequence chart eventlog configuration files.

2009-03-12  ------ omnetpp-4.0 released ------
